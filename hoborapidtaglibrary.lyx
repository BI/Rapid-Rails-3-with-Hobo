#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass hobo
\use_default_options true
\master hobo.lyx
\begin_modules
logicalmkup
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\boxbgcolor #e7e7e7
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\bullet 1 0 9 -1
\bullet 2 0 0 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
This section of the book serves as reference for all of the pre-defined
 DRYML tags used by Hobo to provide the “magic” rendering of pages and forms
 without you coding.
 You can learn how to extend and use these tags to customize your applications.
 
\end_layout

\begin_layout Standard
Look at the figure below that shows the contents of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
rapid.dryml
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/ch14rapid.dryml.png
	width 90col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
rapid.dryml
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
You see how the rapid.dryml file includes the following source files, in
 alphabetical order: 
\end_layout

\begin_layout LyX-Code
rapid_core.dryml 
\end_layout

\begin_layout LyX-Code
rapid_document_tags.dryml 
\end_layout

\begin_layout LyX-Code
rapid_pages.dryml 
\end_layout

\begin_layout LyX-Code
rapid_editng.dryml 
\end_layout

\begin_layout LyX-Code
rapid_forms.dryml 
\end_layout

\begin_layout LyX-Code
rapid_navigation.dryml 
\end_layout

\begin_layout LyX-Code
rapid_plus.dryml 
\end_layout

\begin_layout LyX-Code
rapid_generics.dryml 
\end_layout

\begin_layout LyX-Code
rapid_lifecycles.dryml 
\end_layout

\begin_layout LyX-Code
rapid_support.dryml
\end_layout

\begin_layout Section*
Rapid Tag Library Index
\end_layout

\begin_layout Standard
The following categories will be described in detail in the rest of this
 chapter: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="20col%">
<column alignment="left" valignment="top" width="80col%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Core
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Core DRYML tags.
 These are included implicitly and are always available.
 Contains mainly control-flow tags.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
This taglib does not define tags - it just includes all the other taglibs.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Core
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Core Rapid tags and tags that don’t belong to other categories.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Document Tags
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Extra tags for semantic markup.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Editing
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Editing provides “in-place” or “AJAX” editors for various basic data
 types.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Forms
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Forms provides various tags that make it quick and easy to produce
 working new or edit forms.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Generics
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Generics provides tags that provide generic renderings that can adapt
 to the model being rendered.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Lifecycles
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Contains view-layer support for Hobo’s lifecycles.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Navigation
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Support for navigation links, account navigation (log in, out etc.) and paginatio
n navigation.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Pages
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid-Pages provides tags for working with entire pages.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Plus
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tags that define higher level interactive ‘widgets’
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Summary
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A collection of tags that allow an application outline or summary to be
 created.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Support
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid Support is the home for some tags that are useful in defining other
 tags.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid User Pages
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rapid User Pages contains tags that implement the basics of Hobo’s user
 management: log in, sign up, forgot password etc.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset CommandInset href
LatexCommand href
name "Core"
target "http://cookbook.hobocentral.net/api_taglibs/core"

\end_inset


\end_layout

\begin_layout Standard
Core DRYML tags.
 These are included implicitly and are always available.
 Contains mainly control-flow tags.
\end_layout

\begin_layout LyX-Code
<call-tag> 
\end_layout

\begin_layout LyX-Code
<wrap> 
\end_layout

\begin_layout LyX-Code
<partial> 
\end_layout

\begin_layout LyX-Code
<repeat> 
\end_layout

\begin_layout LyX-Code
<do> 
\end_layout

\begin_layout LyX-Code
<with> 
\end_layout

\begin_layout LyX-Code
<if> 
\end_layout

\begin_layout LyX-Code
<else> 
\end_layout

\begin_layout LyX-Code
<unless>
\end_layout

\begin_layout Subsubsection*
<call-tag> 
\end_layout

\begin_layout Standard
Call the tag given by the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tag
\end_layout

\end_inset

 attribute.
 This lets you call tags dynamically based on some runtime value.
 It’s the DRYML equivalent of Ruby’s 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
send
\end_layout

\end_inset

 method.
\end_layout

\begin_layout Subsubsection*
<wrap> 
\end_layout

\begin_layout Standard
Wrap the body in the tag specified by the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tag
\end_layout

\end_inset

 attribute, if 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
when
\end_layout

\end_inset

 is true.
 Using regular DRYML conditional logic it is rather awkward to conditionally
 wrap some tag in another tag.
 This tag makes it easy to do that.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Usage
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
For example, you might want to wrap an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<img>
\end_layout

\end_inset

 tag in an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<a>
\end_layout

\end_inset

 tag but only under certain conditions.
 Say the current context has an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
href
\end_layout

\end_inset

 attribute that may or may not be nil.
 We want to wrap the img in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<a>
\end_layout

\end_inset

 if 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
href
\end_layout

\end_inset

 is not nil:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "110col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
\noindent
\align left
<wrap when="&this.href.present?" tag="a" href="&this.href"> 
\end_layout

\begin_layout LyX-Code
\noindent
\align left
  <img src="&this.img_filename"/> 
\end_layout

\begin_layout LyX-Code
\noindent
\align left
</wrap>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<partial> 
\end_layout

\begin_layout Standard
DRYML version of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
render(:partial => 'my_partial')
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Usage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "110col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<partial name="my-partial" locals="&{:x => 10, :y => 20}"/>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<repeat> 
\end_layout

\begin_layout Standard
Repeat a section of mark-up.
 The context should be a collection (anything that responds to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
each
\end_layout

\end_inset

).
 The content of the call to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<repeat>
\end_layout

\end_inset

 will be repeated for each item in the collection, and the context will
 be set to each item in turn.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
join: The value of this attribute, if given, will be inserted between each
 of the items (e.g.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
join=", "
\end_layout

\end_inset

 is very common).
\end_layout

\begin_layout Subsubsection*
<do> 
\end_layout

\begin_layout Standard
The ‘do nothing’ tag.
 Used to add parameters or change context without adding any markup
\end_layout

\begin_layout Subsubsection*
<with> 
\end_layout

\begin_layout Standard
Alias of do
\end_layout

\begin_layout Subsubsection*
<if> 
\end_layout

\begin_layout Quote
DRYML’s ‘if’ test
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Usage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<if test="&current_user.administrator?">
\end_layout

\begin_layout LyX-Code
  Logged in as administrator
\end_layout

\begin_layout LyX-Code
</if> 
\end_layout

\begin_layout LyX-Code
<else>
\end_layout

\begin_layout LyX-Code
  Logged in as normal user
\end_layout

\begin_layout LyX-Code
</else>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Note: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<if>
\end_layout

\end_inset

 tests for non-blank vs.
 blank (as defined by ActiveSupport), not true vs.
 false.
 If you do not give the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
test
\end_layout

\end_inset

 attribute, uses the current context instead.
 This allows a nice trick like this:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<if:comments>...</if>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This has the double effect of changing the context to the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.comments
\end_layout

\end_inset

, and only evaluating the body if there are comments (because an empty collectio
n is considered blank)
\end_layout

\begin_layout Subsubsection*
<else> 
\end_layout

\begin_layout Standard
General purpose 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
else
\end_layout

\end_inset

 clause.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<else>
\end_layout

\end_inset

 works with various tags such as 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<if>
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<repeat>
\end_layout

\end_inset

 (the else clause will be output if the collection was empty).
 It simply outputs its content if 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Hobo::Dryml.last_if
\end_layout

\end_inset

 is false.
 This is pretty much a crazy hack, which violates many good principles of
 language design, but it’s very useful : )
\end_layout

\begin_layout Subsubsection*
<unless> 
\end_layout

\begin_layout Standard
Same behavior as 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<if>
\end_layout

\end_inset

, except the test is negated.
 
\end_layout

\begin_layout Subsection*
Rapid Core
\end_layout

\begin_layout Standard
Core Rapid tags and tags that don’t belong to other categories.
\end_layout

\begin_layout LyX-Code
<dev-user-changer> 
\end_layout

\begin_layout LyX-Code
<field-list> 
\end_layout

\begin_layout LyX-Code
<nil-view> 
\end_layout

\begin_layout LyX-Code
<table> 
\end_layout

\begin_layout LyX-Code
<image> 
\end_layout

\begin_layout LyX-Code
<spinner> 
\end_layout

\begin_layout LyX-Code
<hobo-rapid-javascripts> 
\end_layout

\begin_layout LyX-Code
<name> 
\end_layout

\begin_layout LyX-Code
<type-name> 
\end_layout

\begin_layout LyX-Code
<collection-name> 
\end_layout

\begin_layout LyX-Code
<a> 
\end_layout

\begin_layout LyX-Code
<count> 
\end_layout

\begin_layout LyX-Code
<theme-stylesheet> 
\end_layout

\begin_layout LyX-Code
<You> 
\end_layout

\begin_layout LyX-Code
<Your> 
\end_layout

\begin_layout LyX-Code
<A-or-An> 
\end_layout

\begin_layout LyX-Code
<comma-list> 
\end_layout

\begin_layout LyX-Code
<collection-list> 
\end_layout

\begin_layout LyX-Code
<collection-view> 
\end_layout

\begin_layout LyX-Code
<links-for-collection> 
\end_layout

\begin_layout LyX-Code
<view>
\end_layout

\begin_layout Subsubsection*
<dev-user-changer> 
\end_layout

\begin_layout Standard
Development mode only - a menu to change the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
current_user
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<field-list> 
\end_layout

\begin_layout Standard
Renders a table with one row per field, where each row contains a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<th>
\end_layout

\end_inset

 with the field name, and a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<td>
\end_layout

\end_inset

 with (by default) a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<view>
\end_layout

\end_inset

 of the field.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
#{this_field.to_s.sub('?', '')}-label 
\end_layout

\begin_deeper
\begin_layout Itemize
label 
\end_layout

\end_deeper
\begin_layout Itemize
#{this_field.to_s.sub('?', '')}-view 
\end_layout

\begin_deeper
\begin_layout Itemize
view 
\end_layout

\begin_deeper
\begin_layout Itemize
#{this_field.to_s.sub('?', '')}-tag 
\end_layout

\begin_deeper
\begin_layout Itemize
input-help 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
fields: Comma separated list of field names to display.
 Defaults to the fields returned by the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
standard_fields
\end_layout

\end_inset

 helper.
 That is, all fields apart from IDs and timestamps.
 
\end_layout

\begin_layout Itemize
force-all: All non-viewable fields will be skipped unless this attribute
 is given 
\end_layout

\begin_layout Itemize
skip: Comma separated list of fields to exclude 
\end_layout

\begin_layout Itemize
tag: The name of a tag to use inside the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<td>
\end_layout

\end_inset

 to display the value.
 Defaults to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
view
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
show-non-editable: By default, if 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tag
\end_layout

\end_inset

 is set to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
input
\end_layout

\end_inset

, fields for which the current user does not have edit permission will be
 skipped (the entire row is skipped).
 Set this attribute to keep them.
 (Note that 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input>
\end_layout

\end_inset

 automatically degrades to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<view>
\end_layout

\end_inset

 if the user does not have edit permission.)
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Example
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<field-list fields="first-name, last-name, city"> 
\end_layout

\begin_layout LyX-Code
  <first-name-label:>Given Name</first-name-label:>
\end_layout

\begin_layout LyX-Code
  <last-name-label:>Family Name</last-name-label:>
\end_layout

\begin_layout LyX-Code
  <city-view:><name-one/></city-view:>
\end_layout

\begin_layout LyX-Code
</field-list>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<nil-view> 
\end_layout

\begin_layout Standard
Used to render nil values.
 By default renders “(Not Available)”
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Usage
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Redefine in your app to have nil values displayed differently, e.g.:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<def tag="nil-view">-</def>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<table> 
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<table>
\end_layout

\end_inset

 is extended in Rapid to provide a shorthand way to output a set of fields
 for a given collection.
 This is enabled using the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
field
\end_layout

\end_inset

 attribute (without the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
field
\end_layout

\end_inset

 attribute this is just the regular HTML 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<table>
\end_layout

\end_inset

 tag)
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
thead 
\end_layout

\begin_deeper
\begin_layout Itemize
field-heading-row 
\end_layout

\begin_deeper
\begin_layout Itemize
#{scope.field_name}-heading 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
tbody 
\end_layout

\begin_deeper
\begin_layout Itemize
tr 
\end_layout

\begin_deeper
\begin_layout Itemize
#{this_field.to_s.sub('?', '').gsub('.', '-')}-view 
\end_layout

\begin_layout Itemize
controls 
\end_layout

\begin_deeper
\begin_layout Itemize
edit-link 
\end_layout

\begin_layout Itemize
delete-button 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Itemize
tfoot 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Usage
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
If the context is an array of blog posts…
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<table fields="name, created_at, description"/>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This will output a header row containing “Name”, “Created At” and “Description”
 followed by a row for each record in the collection.
 By default, the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<view/>
\end_layout

\end_inset

 tag is called for each field in the row.
 This can be altered with the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
field-tag
\end_layout

\end_inset

 attribute, e.g.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<table fields="name, created_at, description"
\end_layout

\begin_layout LyX-Code
    field-tag="input"/>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This will use 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input/>
\end_layout

\end_inset

 as the tag in each table cell instead of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<view/>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Additional Notes 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<table>
\end_layout

\end_inset

 provides parameters based on the names of the fields which can be used
 to further customize the output.
 For each field a heading parameter is provided, e.g.
 name-heading, created-at-heading, description-heading.
 These can be used to customize the headings:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "105col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<table fields="name, created_at, description">   
\end_layout

\begin_layout LyX-Code
  <created-at-heading:>Creation Date</created-at-heading:> 
\end_layout

\begin_layout LyX-Code
</table>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Similarly, “view” parameters are provided as an additional way to customize
 the table cells of the table body, e.g.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
name-view, created-at-view, description-view:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<table fields="name, created_at, description">
\end_layout

\begin_layout LyX-Code
  <created-at-view:>
\end_layout

\begin_layout LyX-Code
    <view format="%d %B %Y"/>
\end_layout

\begin_layout LyX-Code
  </created-at-view:> 
\end_layout

\begin_layout LyX-Code
</table>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By adding an empty 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
controls
\end_layout

\end_inset

 parameter, the default controls column is enabled adding an edit link and
 delete button for each table row:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<table fields="name, created_at, description"> 
\end_layout

\begin_layout LyX-Code
  <controls:/> 
\end_layout

\begin_layout LyX-Code
</table>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The controls can be further customized using the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
edit-link:
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
delete-button:
\end_layout

\end_inset

 parameters or by providing completely new content for the control column,
 e.g:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<table fields="name, created_at, description">
\end_layout

\begin_layout LyX-Code
  <controls:>my controls!</controls:> 
\end_layout

\begin_layout LyX-Code
</table>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<image> 
\end_layout

\begin_layout Quote
Provides a short-hand way of displaying images in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
public/images
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Usage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<image src="hobo.png"/>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
-> 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<img src="/images/hobo.png"/>
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<image src="blog/funny.jpg" alt="Funny Scene"/>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
-> 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<img src="/images/blog/funny.jpg" alt="Funny Scene"/>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<spinner> 
\end_layout

\begin_layout Quote
Renders an AJAX-progress ‘spinner’ using 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
spinner.gif
\end_layout

\end_inset

 from the current theme, with a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
class='hidden'
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<hobo-rapid-javascripts> 
\end_layout

\begin_layout Quote
Renders some standard JavaScript code that various features of the Rapid
 library rely on.
 This tag would typically be called from your 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<page>
\end_layout

\end_inset

 tag.
 The default Rapid pages include this already.
\end_layout

\begin_layout Subsubsection*
<name> 
\end_layout

\begin_layout Standard
Renders the name of the current context using a variety of methods.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Details
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Equivalent to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<nil-view>
\end_layout

\end_inset

 if 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset

 is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
nil
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Equivalent to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<count>
\end_layout

\end_inset

 if 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset

 is an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Array
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Equivalent to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<type-name>
\end_layout

\end_inset

 if 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset

 is a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
class
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
If the context has a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
name_attribute
\end_layout

\end_inset

 defined, then equivalent to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<view:abc/>
\end_layout

\end_inset

 (where 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
abc
\end_layout

\end_inset

 is the name attribute) 
\end_layout

\begin_layout Itemize
Finally falls back to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.to_s
\end_layout

\end_inset

 (html escaped), but only if the user has view permission for this 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
if-present: if given, nothing at all will be rendered for nil values (as
 opposed to rendering 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<nil-view>
\end_layout

\end_inset

)
\end_layout

\begin_layout Subsubsection*
<type-name> 
\end_layout

\begin_layout Standard
Renders a human readable version of the type of the context 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Details
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
If 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset

 is already a class, the name of that class is used 
\end_layout

\begin_layout Itemize
Otherwise, first 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.member_class
\end_layout

\end_inset

 (for collections), then 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.class
\end_layout

\end_inset

 are tried 
\end_layout

\begin_layout Itemize
By default the name is titleised and singular.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
plural: pluralize the name 
\end_layout

\begin_layout Itemize
lowercase: render the name in all lower case 
\end_layout

\begin_layout Itemize
dasherize: render the name in lower case with dashes instead of spaces.
\end_layout

\begin_layout Subsubsection*
<collection-name> 
\end_layout

\begin_layout Standard
Renders a human readable name of a collection 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Details
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Uses 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.origin_attribute
\end_layout

\end_inset

 as the name.
 
\end_layout

\begin_layout Itemize
Falls back to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<type-name>
\end_layout

\end_inset

 otherwise.
 
\end_layout

\begin_layout Itemize
By default the name is titleised and plural.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
singular: singularize the name 
\end_layout

\begin_layout Itemize
lowercase: render the name in all lower case 
\end_layout

\begin_layout Itemize
satirize: render the name in lower case with dashes instead of spaces.
\end_layout

\begin_layout Subsubsection*
<a> 
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<a>
\end_layout

\end_inset

 is extended in Rapid to automatically provide URLs for Hobo model routes
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Usage
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The tag behaves as a regular HTML link or anchor if either the href or name
 attribute is given:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<a href="/admin">Admin</a>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> Output is exactly as provided, untouched by Rapid
\end_layout

\begin_layout Standard
If no href or name is given then the 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
context
\end_layout

\end_inset

 is used to determine the link URL.
 The helper method 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
object_url
\end_layout

\end_inset

 is used to construct the URL using restful routing: If the context is a
 class then the link will be an index page:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<a with="&BlogPost">My Blog</a>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <a href="/blog_posts">My Blog</a>
\end_layout

\begin_layout Standard
If the context is a hobo model instance then the link will be a show page:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<% blog_post = BlogPost.find(1) %> 
\end_layout

\begin_layout LyX-Code
<a with="&blog_post">My Blog Post</a>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <a href="/blog_posts/1">My Blog Post</a>
\end_layout

\begin_layout Standard
An action can be provided for an alternative show page:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<a with="&blog_post" action="edit">Edit Post</a>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <a href="/blog_posts/1/edit">Edit Post</a>
\end_layout

\begin_layout Standard
Or a new page if the context is a class:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<a with="&BlogPost" action="new">New Blog Post</a>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <a href="/blog_posts/new">New Blog Post</a>
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Additional Features 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
If the constructed route does not exist then the link will not be created,
 but the content of the link will still be output.
 E.g.
 when 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
/blog_posts
\end_layout

\end_inset

 does not exist (because the hobo model controller does not exist or the
 index action is disabled):
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<a with="&BlogPost">My Blog</a>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> My Blog
\end_layout

\begin_layout Standard
when the show action 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
/blog_posts/:id
\end_layout

\end_inset

 does not exist:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<a with="&blog_post">My Blog Post</a>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> My Blog Post
\end_layout

\begin_layout Standard
If no content text is provided then 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<a>
\end_layout

\end_inset

 will use the name method on the context to provide the text.
 E.g.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<a with="&blog_post"/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <a href="/blog_posts/1">My First Blog Post</a>`
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<a with="&BlogPost"/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <a href="/blog_posts">Blog Posts</a>`
\end_layout

\begin_layout Standard
If 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
action="new"
\end_layout

\end_inset

 then 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<a>
\end_layout

\end_inset

 will check that the current user has permission to create the object Several
 useful classes are added automatically to the output 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<a>
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
action: If “new”, triggers the special behavior listed above.
 Otherwise, contains the action to be performed on the context.
 If neither 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
action
\end_layout

\end_inset

 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
nor
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
method
\end_layout

\end_inset

 are specified, the action will be “index” or “show”, as appropriate.
 
\end_layout

\begin_layout Itemize
to: Use this item as the target instead of the current context.
 
\end_layout

\begin_layout Itemize
params, query-params: These are appended to the target as a query string
 after a ”?”.
 
\end_layout

\begin_layout Itemize
href, name: If either of these attributes are present, the smart features
 of this tag are turned off.
 
\end_layout

\begin_layout Itemize
format: this adds “
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.#{format}
\end_layout

\end_inset

” to the end of the url 
\end_layout

\begin_layout Itemize
sub-site: routes the URL using the sub-site 
\end_layout

\begin_layout Itemize
force: overrides the permission check if 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
action
\end_layout

\end_inset

 is “new” 
\end_layout

\begin_layout Itemize
method: “get”, “put”, “post” or “delete”.
 “get” is the default
\end_layout

\begin_layout Subsubsection*
<count> 
\end_layout

\begin_layout Standard
A convenience tag used to output a count and a correctly pluralized label.
 Works with any kind of collection such as an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ActiveRecord
\end_layout

\end_inset

 association or an array.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Usage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<count:comments/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <span class="count">1 Comment</span>
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<count:viewings/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <span class="count">3 Viewings</span>
\end_layout

\begin_layout Standard
The label can be customized using the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
label
\end_layout

\end_inset

 attribute, e.g.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<count:comments label="blog post comment"/> 
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <span class="count">12 blog post comments</span>
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Additional Notes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Use the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
prefix
\end_layout

\end_inset

 attribute to insert words before the count.
 If the prefix is “are” or “is” then it will be pluralized if needed:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
There <count:comments prefix="are"/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> There <span class="count">is 1 Comment</span>
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
There <count:viewings prefix="are"/>
\end_layout

\end_inset

 
\end_layout

\begin_layout LyX-Code
-> There <span class="count">are 3 Viewings</span>
\end_layout

\begin_layout Standard
Use the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
lowercase
\end_layout

\end_inset

 attribute to force the generated label to be lowercase:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<count:comments lowercase/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <span class="count">1 comment</span>
\end_layout

\begin_layout Standard
Use the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
if-any
\end_layout

\end_inset

 attribute to output nothing if the count is zero.
 This can be followed by an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<else>
\end_layout

\end_inset

 tag to handle the empty case:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<count:comments if-any/>
\end_layout

\begin_layout LyX-Code
<else>There are no comments</else>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<theme-stylesheet> 
\end_layout

\begin_layout Standard
Renders a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<link rel="Stylesheet" type="text/css">
\end_layout

\end_inset

 to include the default stylesheet for the selected theme (select with 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<set-theme>
\end_layout

\end_inset

).
 Included in the default pages.
\end_layout

\begin_layout Subsubsection*
<You> 
\end_layout

\begin_layout Standard
Equivalent to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<you titleize/>
\end_layout

\end_inset

.
 Yes it’s an abuse of Ruby naming conventions, but it’s so cute.
 
\end_layout

\begin_layout Subsubsection*
<Your> 
\end_layout

\begin_layout Standard
Capitalized version of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<your>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<A-or-An> 
\end_layout

\begin_layout Standard
Capitalized version of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<a-or-an>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<comma-list>
\end_layout

\begin_layout Standard
Renders a collection of string joined with “, “, or some other string passed
 in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
join
\end_layout

\end_inset

 attribute 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<view>
\end_layout

\end_inset

 calls this tag when called for a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has_many
\end_layout

\end_inset

 collection.
 By default calls:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<links-for-collection/>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<links-for-collection> 
\end_layout

\begin_layout Standard
Renders a comma separated list of links (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<a>
\end_layout

\end_inset

), or “(none)” if the list is empty
\end_layout

\begin_layout Subsubsection*
<view> 
\end_layout

\begin_layout Standard
Provides a read-only view tailored to the type of the object being viewed.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<view>
\end_layout

\end_inset

 is a 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
polymorphic
\end_layout

\end_inset

 tag which means that there are a variety of definitions, each one written
 for a particular type.
 For example there are views for 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Date
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Time
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Numeric
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
String
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Boolean
\end_layout

\end_inset

.
 The type specific view is enclosed in a wrapper tag (typically a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<span>
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<div>
\end_layout

\end_inset

) with some useful classes automatically added.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Usage
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Assuming the context is a blog post… Viewing a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DateTime
\end_layout

\end_inset

 field:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<view:created_at/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <span class="view blog-post-created-at">June 09, 2008 15:36</span>
\end_layout

\begin_layout Itemize
Viewing a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
String
\end_layout

\end_inset

 field:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<view:title/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <span class="view blog-post-title">My First Blog Post</span>
\end_layout

\begin_layout Itemize
Viewing an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Integer
\end_layout

\end_inset

 field:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<view:comment_count/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <span class="view blog-post-comment-count">4</span>
\end_layout

\begin_layout Itemize
Viewing the blog post itself results in a link to the blog post (using Rapid’s
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<a>
\end_layout

\end_inset

 tag):
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<view/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <span class="view model:blog-post-1"> <a href="/blog_posts/1">My First
 Blog Post</a> </span>
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Additional Notes 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The wrapper tag is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<span>
\end_layout

\end_inset

 unless the field type is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Text
\end_layout

\end_inset

 (different to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
String
\end_layout

\end_inset

) where it is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<div>
\end_layout

\end_inset

.
 Use the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
inline
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
block
\end_layout

\end_inset

 attributes to force a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<span>
\end_layout

\end_inset

 or a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<div>
\end_layout

\end_inset

, e.g.,:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<view:body/>
\end_layout

\end_inset

 
\end_layout

\begin_layout LyX-Code
-> <div class="view blog-post-body">This is my blog post body</div> 
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<view:body inline/>
\end_layout

\end_inset

 
\end_layout

\begin_layout LyX-Code
-> <span class="view blog-post-body">This is my blog post body</span>
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<view:created_at block/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <div class="view blog-post-created-at">June 09, 2008 15:36</div>
\end_layout

\begin_layout Itemize
Use the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no-wrapper
\end_layout

\end_inset

 attribute to remove the wrapper tag completely.
 e.g.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<view:created_at no-wrapper/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> June 09, 2008 15:36
\end_layout

\begin_layout Subsubsection*
<view for='ActiveRecord::Base'> 
\end_layout

\begin_layout Standard
Renders a link (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<a>
\end_layout

\end_inset

) to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<view for='Date'> 
\end_layout

\begin_layout Standard
Renders 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.to_s(:long)
\end_layout

\end_inset

, or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.strftime(format)
\end_layout

\end_inset

 if the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
format
\end_layout

\end_inset

 attribute is given
\end_layout

\begin_layout Subsubsection*
<view for='Time'> 
\end_layout

\begin_layout Standard
Renders 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.to_s(:long)
\end_layout

\end_inset

, or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.strftime(format)
\end_layout

\end_inset

 if the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
format
\end_layout

\end_inset

 attribute is given
\end_layout

\begin_layout Subsubsection*
<view for='ActiveSupport::TimeWithZone'>
\end_layout

\begin_layout Standard
Renders 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.to_s(:long)
\end_layout

\end_inset

, or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.strftime(format)
\end_layout

\end_inset

 if the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
format
\end_layout

\end_inset

 attribute is given
\end_layout

\begin_layout Subsubsection*
<view for='Numeric'> 
\end_layout

\begin_layout Standard
Renders 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.to_s
\end_layout

\end_inset

, or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
format % this
\end_layout

\end_inset

 if the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
format
\end_layout

\end_inset

 attribute is given
\end_layout

\begin_layout Subsubsection*
<view for='string'> 
\end_layout

\begin_layout Standard
Renders this with HTML escaping and newlines replaced with 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<br>
\end_layout

\end_inset

 tags 
\end_layout

\begin_layout Subsubsection*
<view for='boolean'> 
\end_layout

\begin_layout Standard
Renders ‘Yes’ for true and ‘No’ for false
\end_layout

\begin_layout Subsection*
Rapid Document Tags
\end_layout

\begin_layout Standard
Extra tags for semantic markup.
\end_layout

\begin_layout LyX-Code
<section-group> 
\end_layout

\begin_layout LyX-Code
<section> 
\end_layout

\begin_layout LyX-Code
<aside> 
\end_layout

\begin_layout LyX-Code
<header> 
\end_layout

\begin_layout LyX-Code
<footer>
\end_layout

\begin_layout Subsubsection*
<section-group> 
\end_layout

\begin_layout Standard
Used as a semantic wrapper around a group of sections and asides.
 CSS layouts can be provided based on this structure.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
default 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Usage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<section-group> 
\end_layout

\begin_layout LyX-Code
  <section>My First Section</section> 
\end_layout

\begin_layout LyX-Code
  <section>My Second Section</section> 
\end_layout

\begin_layout LyX-Code
  <aside>My Aside</aside> 
\end_layout

\begin_layout LyX-Code
</section-group>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<section> 
\end_layout

\begin_layout Standard
A proposed HTML 5 tag for representing a generic document or application
 section.
 Slightly more semantic than 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<div>
\end_layout

\end_inset

 for indicating document structure.
 For the time being, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<section>
\end_layout

\end_inset

 is output as 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<div class="section">
\end_layout

\end_inset

.
 In Hobo, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<section>
\end_layout

\end_inset

 also has one other important behavior which is different to using 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<div>
\end_layout

\end_inset

 directly, when the content of the section is empty, the wrapper tag will
 disappear:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<section>My Section</section>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
  -> <div class="section">My Section</div> 
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
<section><% # empty %></section>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> (nothing is generated)
\end_layout

\begin_layout Subsubsection*
<aside> 
\end_layout

\begin_layout Standard
A proposed HTML 5 semantic tag.
 Outputs 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<div class="aside">
\end_layout

\end_inset

 and works in the same way as 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<section>
\end_layout

\end_inset

 with empty content.
\end_layout

\begin_layout Subsubsection*
<header> 
\end_layout

\begin_layout Standard
A proposed HTML 5 semantic tag.
 Outputs 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<div class="header">
\end_layout

\end_inset

 and works in the same way as 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<section>
\end_layout

\end_inset

 with empty content.
\end_layout

\begin_layout Subsubsection*
<footer> 
\end_layout

\begin_layout Standard
A proposed HTML 5 semantic tag.
 Outputs 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<div class="footer">
\end_layout

\end_inset

 and works in the same way as 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<section>
\end_layout

\end_inset

 with empty content.
 
\end_layout

\begin_layout Subsection*
Rapid Editing
\end_layout

\begin_layout Standard
Rapid Editing provides “in-place” or “AJAX” editors for various basic data
 types.
\end_layout

\begin_layout Standard
This area of Hobo has had less attention that the non-AJAX forms of late,
 so it’s lagging a little.
 There may be some rough edges.
 For example, the tags in this library do not (yet!) support the full set
 of AJAX attributes supported by 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<form>
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<update-button>
\end_layout

\end_inset

 etc.
\end_layout

\begin_layout LyX-Code
<has-many-editor> 
\end_layout

\begin_layout LyX-Code
<belongs-to-editor> 
\end_layout

\begin_layout LyX-Code
<select-one-editor>
\end_layout

\begin_layout LyX-Code
<string-select-editor>
\end_layout

\begin_layout LyX-Code
<boolean-checkbox-editor>
\end_layout

\begin_layout LyX-Code
<integer-select-editor>
\end_layout

\begin_layout LyX-Code
<editor>
\end_layout

\begin_layout Subsubsection*
<has-many-editor> 
\end_layout

\begin_layout Standard
Not implemented - you just get links to the items in the collection
\end_layout

\begin_layout Subsubsection*
<belongs-to-editor> 
\end_layout

\begin_layout Standard
Polymorphic hook for defining type specific AJAX editors for belongs_to
 associations.
 The default is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select-one-editor>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<select-one-editor> 
\end_layout

\begin_layout Standard
Provides a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select>
\end_layout

\end_inset

 menu with an AJAX callback to update a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
belongs_to
\end_layout

\end_inset

 relationship when changed.
 By default the menu contains every record in the target model’s table.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
include-none: Should the menu include a “none” option (true/false).
 Defaults: false, or true if the association is nil at render-time.
 
\end_layout

\begin_layout Itemize
blank-message: The text for the “none” option.
 Default: “(No Product)” (or whatever the model name is) 
\end_layout

\begin_layout Itemize
sort: Sort the options (true/false)? Default: false 
\end_layout

\begin_layout Itemize
update: one or more DOM ID’s (comma separated string or an array) to be
 updated as part of the AJAX call.
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
NOTE: Yes that is a 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
DOM ID
\end_layout

\end_inset

, 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
not a
\end_layout

\end_inset

 part name.
 A common source of confusion because by default the part name and DOM ID
 are the same.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<string-select-editor> 
\end_layout

\begin_layout Standard
Provides a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select>
\end_layout

\end_inset

 menu with an AJAX callback to update a string field when changed.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
values: The values for the menu options.
 Required 
\end_layout

\begin_layout Itemize
Labels: A hash that can be used to customize the labels for the menu.
 Any value that does not have a corresponding key in this hash will have
 its label generated by 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
value.titleize
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
titleize: Set to false to have the default labels be the same as the values.
 Default: true - the labels are generated by 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
value.titleize 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
update: one or more DOM ID’s (comma separated string or an array) to be
 updated as part of the AJAX call.
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
NOTE: Yes that is a 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
DOM ID and
\end_layout

\end_inset

 not a 
\emph on
part name
\emph default
.
 A common source of confusion because by default the part name and DOM ID
 are the same.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<boolean-checkbox-editor> 
\end_layout

\begin_layout Standard
A checkbox with an AJAX callback to update a boolean field when clicked.
\end_layout

\begin_layout Standard

\emph on
Attributes
\emph default
 
\end_layout

\begin_layout Itemize
update: one or more DOM ID’s (comma separated string or an array) to be
 updated as part of the AJAX call.
 
\end_layout

\begin_layout Itemize
message: A message to display in the AJAX-progress spinner.
 Default: “Saving…”
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
NOTE: yes that’s 
\emph on
DOM ID’s
\emph default
 not 
\emph on
part-names
\emph default
.
 A common source of confusion because by default the part name and DOM ID
 are the same.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<integer-select-editor> 
\end_layout

\begin_layout Standard
Provides a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select>
\end_layout

\end_inset

 menu with an AJAX callback to update an integer field when changed.
\end_layout

\begin_layout Standard

\emph on
Attributes
\emph default
 
\end_layout

\begin_layout Itemize
min: The minimum end of the range of numbers to include 
\end_layout

\begin_layout Itemize
max: A male name, short for Maximilian 
\end_layout

\begin_layout Itemize
options: An array of numbers to use if min..max is not enough for your needs.
 
\end_layout

\begin_layout Itemize
nil-option: Label to give if the current value is nil.
 Default: “Choose a value” 
\end_layout

\begin_layout Itemize
message: A message to display in the AJAX-progress spinner.
 Default: “Saving…” 
\end_layout

\begin_layout Itemize
update: one or more DOM ID’s (comma separated string or an array) to be
 updated as part of the AJAX call.
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
NOTE: Yes that is a 
\emph on
DOM ID
\emph default
, not a 
\emph on
part name
\emph default
.
 A common source of confusion because by default the part name and DOM ID
 are the same.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<editor> 
\end_layout

\begin_layout Standard
Polymorphic tag that selects an appropriate in-place-editor according to
 the type of the thing being edited.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<editor>
\end_layout

\end_inset

 will first perform a permission check and will call 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<view>
\end_layout

\end_inset

 instead if edit permission is not available.
\end_layout

\begin_layout Subsubsection*
<editor for='HoboFields::EnumString'> 
\end_layout

\begin_layout Standard
Provides an editor that uses a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select>
\end_layout

\end_inset

 menu.
 Uses the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<string-select-editor>
\end_layout

\end_inset

 tag.
\end_layout

\begin_layout Subsubsection*
<editor for='string'> 
\end_layout

\begin_layout Standard
Provides a simple Scriptaculous in-place-editor that uses an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='text'>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<editor for='text'> 
\end_layout

\begin_layout Standard
Provides a simple Scriptaculous in-place-editor that uses a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<textarea>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<editor for='html'> 
\end_layout

\begin_layout Standard
Provides a simple Scriptaculous in-place-editor that uses a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<textarea>
\end_layout

\end_inset

.
 A JavaScript hook is available in order to replace the simple textarea
 with a rich-text editor.
 For an example, see the 
\begin_inset CommandInset href
LatexCommand href
name "hoboyui"
target "http://github.com/tablatom/hoboyui_plugin"

\end_inset


\end_layout

\begin_layout Subsubsection*
<editor for='datetime'> 
\end_layout

\begin_layout Standard
Provides a simple Scriptaculous in-place-editor that uses an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='text'>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<editor for='date'> 
\end_layout

\begin_layout Standard
Provides a simple Scriptaculous in-place-editor that uses an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='text'>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<editor for='integer'> 
\end_layout

\begin_layout Standard
Provides a simple Scriptaculous in-place-editor that uses an <input type='intege
r'>
\end_layout

\begin_layout Subsubsection*
<editor for='float'> 
\end_layout

\begin_layout Standard
Provides a simple Scriptaculous in-place-editor that uses an <input type='text'>
\end_layout

\begin_layout Subsubsection*
<editor for='password'> 
\end_layout

\begin_layout Standard
Raises an error - passwords cannot be edited in place
\end_layout

\begin_layout Subsubsection*
<editor for='boolean'>
\end_layout

\begin_layout Standard
Calls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<boolean-checkbox-editor>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<editor for='big_integer'> 
\end_layout

\begin_layout Standard
Provides a simple Scriptaculous in-place-editor that uses an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='text'>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<editor for='BigDecimal'> 
\end_layout

\begin_layout Standard
Provides a simple Scriptaculous in-place-editor that uses an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='BigDecimal'>
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection*
Rapid Forms 
\end_layout

\begin_layout Standard
Rapid Forms provides various tags that make it quick and easy to produce
 working new or edit forms.
\end_layout

\begin_layout LyX-Code
<or-cancel> 
\end_layout

\begin_layout LyX-Code
<form> 
\end_layout

\begin_layout LyX-Code
<submit> 
\end_layout

\begin_layout LyX-Code
<remote-method-button> 
\end_layout

\begin_layout LyX-Code
<update-button> 
\end_layout

\begin_layout LyX-Code
<delete-button> 
\end_layout

\begin_layout LyX-Code
<create-button> 
\end_layout

\begin_layout LyX-Code
<select-one> 
\end_layout

\begin_layout LyX-Code
<name-one> 
\end_layout

\begin_layout LyX-Code
<select-input> 
\end_layout

\begin_layout LyX-Code
<error-messages> 
\end_layout

\begin_layout LyX-Code
<select-many> 
\end_layout

\begin_layout LyX-Code
<after-submit> 
\end_layout

\begin_layout LyX-Code
<select-menu> 
\end_layout

\begin_layout LyX-Code
<check-many> 
\end_layout

\begin_layout LyX-Code
<hidden-id-field> 
\end_layout

\begin_layout LyX-Code
<input-many> 
\end_layout

\begin_layout LyX-Code
<input-all> 
\end_layout

\begin_layout LyX-Code
<input> 
\end_layout

\begin_layout LyX-Code
<collection-input>
\end_layout

\begin_layout Subsubsection*
<or-cancel> 
\end_layout

\begin_layout Standard
Renders the common “or (Cancel)” for a form.
 Attributes are merged into the link (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<a>Cancel</a>
\end_layout

\end_inset

), making it easy to customize the destination of the cancel link.
 By default it will link to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.class
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection*
<form> 
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<form>
\end_layout

\end_inset

 has been extended in Rapid to make it easier to construct and use forms
 with Hobo models.
 In addition to the base 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<form>
\end_layout

\end_inset

 tag, a form with contents is generated for each Hobo model.
 These are found in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
app/views/taglibs/auto/rapid/forms.dryml
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard

\emph on
Usage
\emph default
 
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<form>
\end_layout

\end_inset

 can be used as a regular HTML tag:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<form action="/blog_posts/1" method="POST"> 
\end_layout

\begin_layout LyX-Code
  ...
 
\end_layout

\begin_layout LyX-Code
</form> 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
If no action attribute is provided then the context is used to construct
 an appropriate action using restful routing:
\end_layout

\begin_layout Itemize
If the context is a new record then the form action will be a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
POST
\end_layout

\end_inset

 to the create action:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<form with="&BlogPost.new">...</form>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <form action="/blog_posts" method="POST">...</form>
\end_layout

\begin_layout Itemize
If the context is a saved record then the form action will be a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PUT
\end_layout

\end_inset

 to the update action.
 This is handled in a special way by Rails due to current browsers not supportin
g 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PUT
\end_layout

\end_inset

, the method is set to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
POST
\end_layout

\end_inset

 with a hidden input called 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
_method
\end_layout

\end_inset

 with a value of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PUT
\end_layout

\end_inset

.
 Hobo adds this automatically:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<% blog_post = BlogPost.find(1) %> 
\end_layout

\begin_layout LyX-Code
<form with="&blog_post"> 
\end_layout

\begin_layout LyX-Code
  ...
 
\end_layout

\begin_layout LyX-Code
</form>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <form action="/blog_posts/1" method="POST"> 
\end_layout

\begin_layout LyX-Code
  <input id="_method" type="hidden" value="PUT" name="_method"/> ...
 </form>
\end_layout

\begin_layout Standard
AJAX based submission can be enabled by simply adding an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
update
\end_layout

\end_inset

 attribute.
 e.g.
 
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<div part="comments"><collection:comments/></div>
\end_layout

\begin_layout LyX-Code
<form with="&Comment.new" update="comments"/>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<form>
\end_layout

\end_inset

 supports all of the standard AJAX attributes.
\end_layout

\begin_layout Standard

\emph on
Additional Notes
\emph default
 
\end_layout

\begin_layout Itemize
Hobo automatically inserts an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
auth_token
\end_layout

\end_inset

 hidden field if forgery protection is enabled.
 
\end_layout

\begin_layout Itemize
Hobo inserts a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
page_path
\end_layout

\end_inset

 hidden field in create / update forms which it uses to re-render the correct
 page if a validation error occurs.
 
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<form>
\end_layout

\end_inset

 supports all of the standard AJAX attributes - (see the main taglib docs
 for Rapid Forms) 
\end_layout

\begin_layout Standard

\emph on
Attributes
\emph default
 
\end_layout

\begin_layout Itemize
reset-form: Clear the form after submission (only makes sense for AJAX forms)
 
\end_layout

\begin_layout Itemize
refocus-form: Refocus the first form-field after submission (only makes
 sense for AJAX forms)
\end_layout

\begin_layout Subsubsection*
<submit> 
\end_layout

\begin_layout Standard
A shortcut for generating a submit button.
\end_layout

\begin_layout Standard

\emph on
Usage
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<submit label="Go!"/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <input type="submit" value="Go!" class="button submit-button"/>
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<submit image="/images/go.png"/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <input type="image" src="/images/go.png" class="button submit-button"/>
\end_layout

\begin_layout Subsubsection*
<remote-method-button> 
\end_layout

\begin_layout Standard
Provides either an AJAX or non-AJAX button to invoke a “remote method” or
 “web method” declared in the controller.
 Web Methods provide support for the RPC model of client-server interaction,
 in contrast to the REST model.
 The preference in Rails is to use REST as much as possible, but we are
 pragmatists, and sometimes you just to need a remote procedure call.
\end_layout

\begin_layout Standard
The URL that the call is POSTed to is the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
object_url
\end_layout

\end_inset

 of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset

, plus the method name 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<remote-method-button>
\end_layout

\end_inset

 supports all of the standard AJAX attributes (see the main taglib documentation
 for Rapid Forms).
 If any AJAX attributes are given, the button becomes an AJAX button.
 If not, it causes a normal form submission and page reload.
\end_layout

\begin_layout Standard

\emph on
Attributes
\emph default
 
\end_layout

\begin_layout Itemize
method: the name of the web-method to call label: the label on the button
\end_layout

\begin_layout Subsubsection*
<update-button> 
\end_layout

\begin_layout Standard
Provides an AJAX button to send a RESTful update or “PUT” to the server.
 i.e., to update one or more fields of a record.
 Note that unlike similar tags, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<update-button>
\end_layout

\end_inset

 does not support both AJAX and non-AJAX modes at this time.
 It only does AJAX.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<update-button>
\end_layout

\end_inset

 supports all of the standard AJAX attributes (see the main taglib documentation
 for Rapid Forms).
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Attributes 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
label: The label on the button.
 
\end_layout

\begin_layout Itemize
fields: A hash with new field values pairs to update the resource with.
 The items in the hash will be converted to HTTP parameters.
 
\end_layout

\begin_layout Itemize
params: Another hash with additional HTTP parameters to include in the AJAX
 request
\end_layout

\begin_layout Subsubsection*
<delete-button> 
\end_layout

\begin_layout Standard
Provides either an AJAX or non-AJAX delete button to send a RESTful “DELETE”.
 The context should be a record for which you to want provide a delete button.
\end_layout

\begin_layout Standard
The Rapid Library has a convention of marking (in the output HTML, using
 a special CSS class) elements as “object elements”, with the class and
 ID of the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ActiveRecord
\end_layout

\end_inset

 object that they represent.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<delete-button>
\end_layout

\end_inset

 assumes it is placed inside such an element, and will automatically find
 the right element to remove (fade out) from the DOM.
 The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<collection>
\end_layout

\end_inset

 tag adds this metadata (CSS class) automatically, so 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<delete-button>
\end_layout

\end_inset

 works well when used inside a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<collection>
\end_layout

\end_inset

.
 This is a Clever Trick, which needs to be revisited and perhaps simplified.
 If used within a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<collection>
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<delete-button>
\end_layout

\end_inset

 also knows how to add an “empty message” such as “no comments to display”
 when you delete the last item.
 Clever Tricks abound.
 
\end_layout

\begin_layout Standard
Current limitation: There is no support for the AJAX callbacks at this time.
 All the standard AJAX attributes 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
except the callbacks
\end_layout

\end_inset

 are supported (see the main taglib documentation for Rapid Forms).
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
label: The label for the button.
 Default: “Remove” 
\end_layout

\begin_layout Itemize
in-place: delete in place (AJAX)? Default: true, or false if the record
 to be deleted is the same as the top level context of the page 
\end_layout

\begin_layout Itemize
image: URL of an image for the button.
 Changes the rendered tag from: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='button'>
\end_layout

\end_inset

 to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='image' src='...'>
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
fade: Perform the fade effect (true/false)? Default: true
\end_layout

\begin_layout Subsubsection*
<create-button> 
\end_layout

\begin_layout Standard
Provides an AJAX create button that will send a RESTful “POST” to the server
 to create a new resource.
 All of the standard AJAX attributes are supported (see the main taglib
 documentation for Rapid Forms).
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Attributes 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
model: The class to instantiate, pass either the class name or the class
 object.
\end_layout

\begin_layout Subsubsection*
<select-one> 
\end_layout

\begin_layout Standard
A 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select>
\end_layout

\end_inset

 menu from which the user can choose the target record for a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
belongs_to
\end_layout

\end_inset

 association.
 This is the default input that Rapid uses for 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
belongs_to
\end_layout

\end_inset

 associations.
 The menu is constructed using the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
to_s
\end_layout

\end_inset

 representation of the records.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
include-none: whether to include a ‘none’ option (i.e.
 set the foreign key to null).
 Defaults to false 
\end_layout

\begin_layout Itemize
blank-message: the message for the ‘none’ option.
 Defaults to “(No 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<model-name>
\end_layout

\end_inset

)”, e.g.
 “(No Product)” 
\end_layout

\begin_layout Itemize
options: an array of records to include in the menu.
 Defaults to the all the records in the target table that match any 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
:conditions
\end_layout

\end_inset

 declared on the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
belongs_to
\end_layout

\end_inset

 (subject to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
limit
\end_layout

\end_inset

) 
\end_layout

\begin_layout Itemize
limit: if options is not specified, this limits the number of records.
 Default: 100 
\end_layout

\begin_layout Itemize
text_method: The method to call on each record to get the text for the option.
 Multiple methods are supported, i.e., “institution.name”
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
See Also
\end_layout

\end_inset


\end_layout

\begin_layout Standard
For situations where there are too many target records to practically include
 in a menu, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<name-one>
\end_layout

\end_inset

 provides an autocompleter which would be more suitable.
\end_layout

\begin_layout Subsubsection*
<name-one> 
\end_layout

\begin_layout Standard
An 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type="text">
\end_layout

\end_inset

 with auto-completion.
 Allows the user to chose the target of a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
belongs_to
\end_layout

\end_inset

 association by name.
 This tag relies on an autocompleter being defined in a controller.
 A simple example:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<form with="&ProjectMembership.new">
\end_layout

\begin_layout LyX-Code
  <name-one:user> 
\end_layout

\begin_layout LyX-Code
</form>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
class ProjectMembership < ActiveRecord::Base 
\end_layout

\begin_layout LyX-Code
  hobo_model belongs_to :user 
\end_layout

\begin_layout LyX-Code
end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
class User < ActiveRecord::Base 
\end_layout

\begin_layout LyX-Code
  hobo_user_model has_many :project_memberships, :accessible => true, :dependent
 => :destroy 
\end_layout

\begin_layout LyX-Code
end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
class UsersController < ApplicationController 
\end_layout

\begin_layout LyX-Code
  autocomplete 
\end_layout

\begin_layout LyX-Code
end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The route used by the autocompleter looks something like 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
/users/complete_name
\end_layout

\end_inset

.
 The first part of this route is specified by the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
complete-target
\end_layout

\end_inset

 attribute, and the second part is specified by the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
completer
\end_layout

\end_inset

 attribute.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
complete-target
\end_layout

\end_inset

 specifies the controller for the route.
 It can be specified by either supplying a model class or a model.
 If a model is supplied, the id of the model is passed as a parameter to
 the controller.
 (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
?id=7
\end_layout

\end_inset

, for example) The default for this attribute is the class of the context.
 In other words, the class that contains the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has_many
\end_layout

\end_inset

 / 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has_one
\end_layout

\end_inset

, not the class with the belongs_to.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
completer
\end_layout

\end_inset

 specifies the action for the route.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
name-one
\end_layout

\end_inset

 prepends 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
complete_
\end_layout

\end_inset

 to the value given here.
 This should be exactly the same as the first parameter to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
autocomplete
\end_layout

\end_inset

 in your controller.
 As an example: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
autocomplete :email_address
\end_layout

\end_inset

 would correspond to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
completer="email_address"
\end_layout

\end_inset

.
 The default for this attribute is the name field for the model being searched,
 which is usually 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
name
\end_layout

\end_inset

, but not always.
 The query string is passed to the controller in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
query
\end_layout

\end_inset

 parameter.
 (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
?query=hello
\end_layout

\end_inset

 for example).
\end_layout

\begin_layout Subsubsection*
<select-input> 
\end_layout

\begin_layout Standard
A 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select>
\end_layout

\end_inset

 menu input.
 This tag differs from 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select-menu>
\end_layout

\end_inset

 only in that it adds the correct 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
name
\end_layout

\end_inset

 attribute for the current field, and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
selected
\end_layout

\end_inset

 default to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
options: an array of options suitable to be passed to the Rails 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
options_for_select
\end_layout

\end_inset

 helper.
 
\end_layout

\begin_layout Itemize
selected: the value (from the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
options
\end_layout

\end_inset

 array) that should be initially selected.
 Defaults to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
first-option: a string to be used for an extra option in the first position.
 E.g.
 “Please choose…” 
\end_layout

\begin_layout Itemize
first-value: the value to be used with the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
first-option
\end_layout

\end_inset

.
 Typically not used, meaning the option has a blank value.
\end_layout

\begin_layout Subsubsection*
<error-messages> 
\end_layout

\begin_layout Standard
Renders a readable list of error messages following a form submission.
 Expects the errors to be in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this.errors
\end_layout

\end_inset

.
 Renders nothing if there are no errors.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
heading 
\end_layout

\begin_layout Itemize
ul 
\end_layout

\begin_deeper
\begin_layout Itemize
li 
\end_layout

\end_deeper
\begin_layout Subsubsection*
<select-many>
\end_layout

\begin_layout Standard
An input for 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has_many :through
\end_layout

\end_inset

 associations that lets the user chose the items from a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select>
\end_layout

\end_inset

 menu.
\end_layout

\begin_layout Standard
To use this tag, the model of the items the user is choosing 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
must
\end_layout

\end_inset

 have unique names, and the 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
proto-item 
\end_layout

\begin_deeper
\begin_layout Itemize
proto-hidden 
\end_layout

\begin_layout Itemize
proto-remove-button 
\end_layout

\end_deeper
\begin_layout Itemize
item 
\end_layout

\begin_deeper
\begin_layout Itemize
hidden 
\end_layout

\begin_layout Itemize
remove-button 
\end_layout

\end_deeper
\begin_layout Subsubsection*
<after-submit> 
\end_layout

\begin_layout Standard
Used inside a form to specify where to redirect after successful submission.
 This works by inserting a hidden field called 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
after_submit
\end_layout

\end_inset

 which is used by Hobo if present to perform a redirect after the form submissio
n.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Usage
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Use the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stay-here
\end_layout

\end_inset

 attribute to remain on the current page: 
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<form> 
\end_layout

\begin_layout LyX-Code
  <after-submit stay-here/> ...
 
\end_layout

\begin_layout LyX-Code
</form> 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Use the go-back option to return to the previous page: 
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<form> 
\end_layout

\begin_layout LyX-Code
  <after-submit go-back/> ...
 
\end_layout

\begin_layout LyX-Code
</form> 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Use the uri option to specify a redirect location: 
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<form> 
\end_layout

\begin_layout LyX-Code
  <after-submit uri="/admin"/> ...
 
\end_layout

\begin_layout LyX-Code
</form>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<select-menu> 
\end_layout

\begin_layout Standard
A simple wrapper around the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select>
\end_layout

\end_inset

 tag and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
options_for_select
\end_layout

\end_inset

 helper
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
default 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
options: an array of options suitable to be passed to the Rails 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
options_for_select
\end_layout

\end_inset

 helper.
 
\end_layout

\begin_layout Itemize
selected: the value (from the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
options
\end_layout

\end_inset

 array) that should be initially selected.
 Defaults to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
first-option: a string to be used for an extra option in the first position.
 E.g.
 “Please choose…” 
\end_layout

\begin_layout Itemize
first-value: the value to be used with the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
first-option
\end_layout

\end_inset

.
 Typically not used, meaning the option has a blank value.
\end_layout

\begin_layout Subsubsection*
<check-many> 
\end_layout

\begin_layout Standard
Renders a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<ul>
\end_layout

\end_inset

 list of checkboxes, one for each of the potential target in a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has_many
\end_layout

\end_inset

 association.
 The user can check the items they wish to have associated.
 A typical use might be selecting categories for a blog post.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
default 
\end_layout

\begin_deeper
\begin_layout Itemize
li 
\end_layout

\begin_deeper
\begin_layout Itemize
name 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
options: an array of models that may be added to the collection 
\end_layout

\begin_layout Itemize
disabled: if true, sets the disabled flag on all check boxes.
\end_layout

\begin_layout Subsubsection*
<hidden-id-field>
\end_layout

\begin_layout Standard
Renders an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='hidden'>
\end_layout

\end_inset

 for the id field of the current context
\end_layout

\begin_layout Subsubsection*
<input-many> 
\end_layout

\begin_layout Standard
Creates a sub-section of the form which the user can repeat using (+) and
 (-) buttons, in order to allow an entire 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has_many
\end_layout

\end_inset

 collection to be created/edited in a single form.
 
\end_layout

\begin_layout Standard
This tag is very different from tags like 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select-many>
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<check-many>
\end_layout

\end_inset

 in that: Those tags are used to chose existing records to include in the
 association, while 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input-many>
\end_layout

\end_inset

 is used to actually create or edit the records in the association.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
default 
\end_layout

\begin_layout Itemize
remove-item 
\end_layout

\begin_layout Itemize
add-item 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Example
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Say you are creating a new 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Category
\end_layout

\end_inset

 in your online shop, and you want to create some initial products 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
in the same form
\end_layout

\end_inset

, you can add the following to your form:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<input-many:products>
\end_layout

\begin_layout LyX-Code
  <field-list fields="name, price"/>
\end_layout

\begin_layout LyX-Code
</input-many>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The body of the tag will be repeated for each of the current records in
 the collection, or will just appear once (with blank fields) if the collection
 is empty.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
fields: If you do not specify any content for the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
input-many
\end_layout

\end_inset

, a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<field-list>
\end_layout

\end_inset

 is rendered.
 This attribute is passed through to the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<field-list>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<input-all> 
\end_layout

\begin_layout Standard
Renders a sub-section of a form with fields for every record in a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has_many
\end_layout

\end_inset

 association.
 This is similar to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input-many>
\end_layout

\end_inset

 except there is no ability to add and remove items (i.e.
 no (+) and (-) buttons).
\end_layout

\begin_layout Subsubsection*
<input> 
\end_layout

\begin_layout Standard
Provides an editable control tailored to the type of the object in context.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input>
\end_layout

\end_inset

 tags should be used within a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<form>
\end_layout

\end_inset

.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input>
\end_layout

\end_inset

 is a 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
polymorphic
\end_layout

\end_inset

 tag which means that there are a variety of definitions, each one written
 for a particular type.
 For example there are inputs for 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
text, boolean, password, date, datetime, integer, float, string
\end_layout

\end_inset

 and more.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Usage
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The tag behaves as a regular HTML input if the type attribute is given:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<input type="text" name="my_input"/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> Output is exactly as provided, untouched by Rapid
\end_layout

\begin_layout Standard
If no type attribute is given then the context is used.
 For example if the context is a blog post:
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<input:title/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <input id="blog_post[name]" class="string blog-post-name" type="text"
 value="My Blog Post" name="blog_post[name]"/>
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<input:created_at/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <select id="blog_post_created_at_year" name="blog_post[created_at][year]">
 
\end_layout

\begin_layout LyX-Code
  ...
 
\end_layout

\begin_layout LyX-Code
</select>
\end_layout

\begin_layout LyX-Code
<select id="blog_post_created_at_month" name="blog_post[created_at][month]">
 
\end_layout

\begin_layout LyX-Code
  ...
 
\end_layout

\begin_layout LyX-Code
</select>
\end_layout

\begin_layout LyX-Code
<select id="blog_post_created_at_day" name="blog_post[created_at][day]">
   
\end_layout

\begin_layout LyX-Code
  ...
 
\end_layout

\begin_layout LyX-Code
</select>
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<input:description/>
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
-> <textarea class="text blog-post-description" id="blog_post[description]"
 name="blog_post[description]"> 
\end_layout

\begin_layout LyX-Code
  ...
 
\end_layout

\begin_layout LyX-Code
</textarea>
\end_layout

\begin_layout Standard
If the context is a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
belongs_to
\end_layout

\end_inset

 association, the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select-one>
\end_layout

\end_inset

 tag is used.
\end_layout

\begin_layout Standard
If the context is a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has_many :through
\end_layout

\end_inset

 association, the polymorphic 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<collection-input>
\end_layout

\end_inset

 tag is used.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
no-edit: control what happens if 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
can_edit?
\end_layout

\end_inset

 is false.
 Can be one of: 
\end_layout

\begin_deeper
\begin_layout Itemize
view: render the current value using the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<view>
\end_layout

\end_inset

 tag 
\end_layout

\begin_layout Itemize
disable: render the input as normal, but add HTML’s 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
disabled
\end_layout

\end_inset

 attribute 
\end_layout

\begin_layout Itemize
skip: render nothing at all 
\end_layout

\begin_layout Itemize
ignore: render the input normally.
 That is, don’t even perform the edit check.
\end_layout

\end_deeper
\begin_layout Subsubsection*
<input for='HoboFields::EnumString'> 
\end_layout

\begin_layout Standard
A 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select>
\end_layout

\end_inset

 menu containing the values of an ‘enum string’.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
labels: A hash that gives custom labels for the values of the enum.
 Any values that do not have corresponding keys in this hash will get 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
value.titleize
\end_layout

\end_inset

 as the label.
 
\end_layout

\begin_layout Itemize
titleize: Set to false to have the value itself (rather than 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
value.titleize
\end_layout

\end_inset

) be the default label.
 Default: true 
\end_layout

\begin_layout Itemize
first-option: a string to be used for an extra option in the first position.
 E.g.
 “Please choose…” 
\end_layout

\begin_layout Itemize
first-value: the value to be used with the first-option.
 Typically not used, meaning the option has a blank value.
\end_layout

\begin_layout Subsubsection*
<input for='text'>
\end_layout

\begin_layout Standard
A 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<textarea>
\end_layout

\end_inset

 input
\end_layout

\begin_layout Subsubsection*
<input for='boolean'>
\end_layout

\begin_layout Standard
A checkbox plus a hidden field.
 The hidden field trick comes from Rails - it means that when the checkbox
 is not checked, the parameter name is still submitted, with a ‘0’ value
 (the value is ‘1’ when the checkbox is checked)
\end_layout

\begin_layout Subsubsection*
<input for='password'> 
\end_layout

\begin_layout Standard
A password input - 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='password'>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<input for='date'> 
\end_layout

\begin_layout Standard
A date picker, using the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
select_date
\end_layout

\end_inset

 helper from Rails
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
order: The order of the year, month and day menus.
 A comma separated string or an array.
 Default: “year, month, day”
\end_layout

\begin_layout Standard
Any other attributes are passed through to the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
select_date
\end_layout

\end_inset

 helper.
 The menus default to the current date if the current value is nil.
\end_layout

\begin_layout Subsubsection*
<input for='time'>
\end_layout

\begin_layout Standard
A date/time picker, using the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
select_date
\end_layout

\end_inset

 helper from Rails
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
order: The order of the year, month and date menus.
 A comma separated string or an array.
 Default: “year, month, day, hour, minute, second”
\end_layout

\begin_layout Standard
Any other attributes are passed through to the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
select_date
\end_layout

\end_inset

 helper.
 The menus default to the current time if the current value is nil.
\end_layout

\begin_layout Subsubsection*
<input for='datetime'>
\end_layout

\begin_layout Standard
A date/time picker, using the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
select_datetime
\end_layout

\end_inset

 helper from Rails
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
order: The order of the year, month and date menus.
 A comma separated string or an array.
 Default: “year, month, day, hour, minute”
\end_layout

\begin_layout Standard
Any other attributes are passed through to the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
select_datetime
\end_layout

\end_inset

 helper.
 The menus default to the current time if the current value is nil.
\end_layout

\begin_layout Subsubsection*
<input for='integer'>
\end_layout

\begin_layout Standard
An 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='text'>
\end_layout

\end_inset

 input.
\end_layout

\begin_layout Subsubsection*
<input for='float'> 
\end_layout

\begin_layout Standard
An 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='text'>
\end_layout

\end_inset

 input.
\end_layout

\begin_layout Subsubsection*
<input for='string'> 
\end_layout

\begin_layout Standard
An 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='text'>
\end_layout

\end_inset

 input.
\end_layout

\begin_layout Subsubsection*
<input for='big_integer'>
\end_layout

\begin_layout Standard
An 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='text'>
\end_layout

\end_inset

 input.
\end_layout

\begin_layout Subsubsection*
<input for='Paperclip::Attachment'>
\end_layout

\begin_layout Subsubsection*
<input for='BigDecimal'> 
\end_layout

\begin_layout Standard
An 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input type='text'>
\end_layout

\end_inset

 input.
 
\end_layout

\begin_layout Subsubsection*
<collection-input> 
\end_layout

\begin_layout Standard
This tag is called by 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<input>
\end_layout

\end_inset

 when the context is a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has_many :through
\end_layout

\end_inset

 collection.
 By default a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select-many>
\end_layout

\end_inset

 is used, but this can be customized on a per-type basis.
 For example, say you would like the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<check-many>
\end_layout

\end_inset

 tag used to edit collections a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Category
\end_layout

\end_inset

 model in your application: 
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<def tag="collection-input" for="Category">
\end_layout

\begin_layout LyX-Code
  <check-many merge/>
\end_layout

\begin_layout LyX-Code
</def>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<collection-input for='ActiveRecord::Base'>
\end_layout

\begin_layout Standard
The default 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<collection-input>
\end_layout

\end_inset

 - calls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select-many>
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Rapid Generics
\end_layout

\begin_layout Standard
Rapid Generics provides tags that provide generic renderings that can adapt
 to the model being rendered.
 At the moment this library provides cards and collections of cards.
\end_layout

\begin_layout LyX-Code
<card> 
\end_layout

\begin_layout LyX-Code
<search-card> 
\end_layout

\begin_layout LyX-Code
<empty-collection-message> 
\end_layout

\begin_layout LyX-Code
<collection> 
\end_layout

\begin_layout LyX-Code
<record-flags>
\end_layout

\begin_layout Subsubsection*
<card> 
\end_layout

\begin_layout Standard
A ‘card’ is a representation of an sub-object within a page, such as a comment
 on a blog-post, or a single product in a list of products.
 This definition is just the very basic framework which gives the basis
 for the automatic cards that get generated.
 See 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
app/views/taglibs/auto/rapid/cards.dryml
\end_layout

\end_inset

 for the cards that have been generated for your specific application.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
default 
\end_layout

\begin_deeper
\begin_layout Itemize
header 
\end_layout

\begin_layout Itemize
body 
\end_layout

\end_deeper
\begin_layout Subsubsection*
<search-card> 
\end_layout

\begin_layout Standard
A special card which is used by live-search to render the results.
 By default this just calls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
card
\end_layout

\end_inset

, but you can define your own search cards with 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<def tag='search-card' for="MyModel">
\end_layout

\end_inset

 to customize search results for that model.
\end_layout

\begin_layout Subsubsection*
<empty-collection-message>
\end_layout

\begin_layout Standard
Renders a message such as “No products to display”.
 If the collection (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset

) is not empty, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
style="display:none"
\end_layout

\end_inset

 is added.
 This means the message is still present and can be revealed with JavaScript
 if all items in the collection are removed with AJAX remove buttons.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
default 
\end_layout

\begin_layout Subsubsection*
<collection> 
\end_layout

\begin_layout Standard
Repeats the body of the tag inside a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<ul>
\end_layout

\end_inset

 list with one item for each object in the collection (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset

).
 If no body is given, renders a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<card>
\end_layout

\end_inset

 inside the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<li>
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<li>
\end_layout

\end_inset

 tags are automatically given a ‘model ID’ CSS class, which means the AJAX
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<remove-button>
\end_layout

\end_inset

 will automatically be able to remove items from the collection.
 Also adds ‘even’ and ‘odd’ CSS classes.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
item 
\end_layout

\begin_deeper
\begin_layout Itemize
default 
\end_layout

\begin_deeper
\begin_layout Itemize
card 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
empty-message 
\end_layout

\begin_layout Subsubsection*
<record-flags> 
\end_layout

\begin_layout Standard
Renders a comma-separated list of any 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
fields
\end_layout

\end_inset

 passed in the fields attribute that are true (in the Ruby sense).
 For example, if a forum post had a boolean field 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
sticky
\end_layout

\end_inset

, this tag can be used to automatically label sticky posts “Sticky”.
 Similarly, you could automatically add an “Administrator” label to the
 user’s home page (this is seen in the default Hobo app).
 
\end_layout

\begin_layout Subsection*
Rapid Lifecycles
\end_layout

\begin_layout Standard
Contains view-layer support for Hobo’s lifecycles.
 Note that lifecycle forms are generated automatically in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
app/views/taglibs/auto/rapid/forms.dryml
\end_layout

\end_inset

 - this library contains only lifecycle push-buttons.
\end_layout

\begin_layout LyX-Code
<transition-button> 
\end_layout

\begin_layout LyX-Code
<transition-buttons>
\end_layout

\begin_layout Subsubsection*
<transition-button>
\end_layout

\begin_layout Standard
A push-button to invoke a lifecycle transition either as a page-reload or
 as an AJAX call.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
transition: the name of the transition to invoke.
 Required 
\end_layout

\begin_layout Itemize
update: one or more DOM IDs of AJAX parts to update after the transition
\end_layout

\begin_layout Itemize
label: the label on the button.
 Defaults to the name of the transition
\end_layout

\begin_layout Standard
All of the standard AJAX attributes are also supported.
\end_layout

\begin_layout Subsubsection*
<transition-buttons> 
\end_layout

\begin_layout Standard
Renders a div containing transition buttons for every transition available
 to the current user.
 For example, you could use this on a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Friendship
\end_layout

\end_inset

 card: the person invited to have friendship would automatically see ‘Accept’
 and ‘Decline’ buttons, while the person initiating the invite would see
 ‘Retract’.
 
\end_layout

\begin_layout Subsection*
Rapid Navigation
\end_layout

\begin_layout Standard
Support for navigation links, account navigation (log in, out etc.) and paginatio
n navigation.
\end_layout

\begin_layout LyX-Code
<navigation> 
\end_layout

\begin_layout LyX-Code
<nav-item> 
\end_layout

\begin_layout LyX-Code
<account-nav> 
\end_layout

\begin_layout LyX-Code
<page-nav>
\end_layout

\begin_layout Subsubsection*
<navigation> 
\end_layout

\begin_layout Standard
General purpose navigation bar.
 Renders a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<ul class="navigation">
\end_layout

\end_inset

.
 This tag is intended to be used in conjunction with 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<nav-item>
\end_layout

\end_inset

.
 The main feature of this pair of tags (over, say, just using a plain 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<ul>
\end_layout

\end_inset

 list), is that it’s easy to have a ‘current’ CSS class added to the appropriate
 nav item (so you can highlight the page/section the user is)
\end_layout

\begin_layout Standard
The main navigation in the default hobo app is implemented with 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<navigation>
\end_layout

\end_inset

 but this tag is also appropriate for any sub-navigation.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
default:
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
current: the textual content of the nav item that should have the ‘current’
 CSS class added (see example) 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Example
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The normal usage is to define your own navigation tag that calls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<navigation>
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<def tag="sub-nav"> 
\end_layout

\begin_layout LyX-Code
  <navigation merge>
\end_layout

\begin_layout LyX-Code
    <nav-item>Red</nav-item> 
\end_layout

\begin_layout LyX-Code
    <nav-item>Green</nav-item> 
\end_layout

\begin_layout LyX-Code
    <nav-item>Blue</nav-item> 
\end_layout

\begin_layout LyX-Code
  </navigation> 
\end_layout

\begin_layout LyX-Code
</def>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Then in your pages you can call the tag like this:
\end_layout

\begin_layout Itemize
On the ‘red’ page: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<sub-nav current="red"/>
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
On the ‘green’ page: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<sub-nav current="green"/>
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
And so on.
\end_layout

\begin_layout Subsubsection*
<nav-item> 
\end_layout

\begin_layout Standard
Renders a single item in a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<navigation>
\end_layout

\end_inset

 menu.
 
\end_layout

\begin_layout Subsubsection*
<account-nav> 
\end_layout

\begin_layout Standard
Account Navigation (log in / out / signup) When logged in, this renders:
 
\end_layout

\begin_layout Itemize
“Logged in as …” 
\end_layout

\begin_layout Itemize
Link to account page 
\end_layout

\begin_layout Itemize
Log out link
\end_layout

\begin_layout Standard
When not logged in, renders: 
\end_layout

\begin_layout Itemize
Log in link 
\end_layout

\begin_layout Itemize
Sign up link 
\end_layout

\begin_layout Standard
This is a simple tag - just look at the source if you need to know more
 detail.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
ul 
\end_layout

\begin_deeper
\begin_layout Itemize
dev-user-changer 
\end_layout

\begin_layout Itemize
logged-in-as 
\end_layout

\begin_layout Itemize
account 
\end_layout

\begin_layout Itemize
log-out 
\end_layout

\begin_layout Itemize
log-in 
\end_layout

\begin_layout Itemize
sign-up 
\end_layout

\end_deeper
\begin_layout Subsubsection*
<page-nav> 
\end_layout

\begin_layout Standard
A simple wrapper around the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
will_paginate
\end_layout

\end_inset

 helper.
 All options to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
will_paginate
\end_layout

\end_inset

 are available as attributes 
\end_layout

\begin_layout Subsection*
Rapid Pages
\end_layout

\begin_layout Standard
Rapid-Pages provides tags for working with entire pages.
\end_layout

\begin_layout LyX-Code
<page> 
\end_layout

\begin_layout LyX-Code
<page-scripts> 
\end_layout

\begin_layout LyX-Code
<permission-denied-page> 
\end_layout

\begin_layout LyX-Code
<not-found-site> 
\end_layout

\begin_layout LyX-Code
<doc-type> 
\end_layout

\begin_layout LyX-Code
<html> 
\end_layout

\begin_layout LyX-Code
<if-ie> 
\end_layout

\begin_layout LyX-Code
<stylesheet> 
\end_layout

\begin_layout LyX-Code
<javascript> 
\end_layout

\begin_layout LyX-Code
<flash-message> 
\end_layout

\begin_layout LyX-Code
<flash-messages> 
\end_layout

\begin_layout LyX-Code
<ajax-progress>
\end_layout

\begin_layout Subsubsection*
<page> 
\end_layout

\begin_layout Standard
The basic page structure for all the pages in a Hobo Rapid application.
 Providing the doctype, page title, standard stylesheet JavaScript includes,
 the AJAX progress spinner, default header with app-name, account navigation,
 main navigation, and live search, empty section for the page content, flash
 message (if any) and an empty page footer.
 The easiest way to see what this tag does is to look at the source.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
head 
\end_layout

\begin_deeper
\begin_layout Itemize
title 
\end_layout

\begin_layout Itemize
stylesheets 
\end_layout

\begin_deeper
\begin_layout Itemize
app-stylesheet 
\end_layout

\end_deeper
\begin_layout Itemize
scripts 
\end_layout

\begin_deeper
\begin_layout Itemize
JavaScript 
\end_layout

\begin_layout Itemize
fix-ie6 
\end_layout

\begin_layout Itemize
custom-scripts 
\end_layout

\begin_layout Itemize
application-JavaScript 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
body 
\end_layout

\begin_deeper
\begin_layout Itemize
AJAX-progress 
\end_layout

\begin_layout Itemize
header 
\end_layout

\begin_deeper
\begin_layout Itemize
account-nav 
\end_layout

\begin_layout Itemize
app-name 
\end_layout

\begin_layout Itemize
live-search 
\end_layout

\begin_layout Itemize
main-nav 
\end_layout

\end_deeper
\begin_layout Itemize
content 
\end_layout

\begin_layout Itemize
footer 
\end_layout

\begin_layout Itemize
page-scripts 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
title: the page title, will have : 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<app-name>
\end_layout

\end_inset

 appended 
\end_layout

\begin_layout Itemize
full-title: the full page title.
 Set this if you do not want the app name suffix.
 
\end_layout

\begin_layout Subsubsection*
<page-scripts> 
\end_layout

\begin_layout Standard
Renders dynamically generated JavaScript required by 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
hobo-rapid.js
\end_layout

\end_inset

, including the information required to perform automatic part updates
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
default
\end_layout

\begin_layout Subsubsection*
<permission-denied-page> 
\end_layout

\begin_layout Standard
The page rendered by default in the case of a permission-denied error
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
content 
\end_layout

\begin_deeper
\begin_layout Itemize
content-header 
\end_layout

\begin_deeper
\begin_layout Itemize
heading 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
message: The main message to display.
 Defaults to “That operation is not allowed”
\end_layout

\begin_layout Subsubsection*
<not-found-page> 
\end_layout

\begin_layout Standard
The page rendered by default in the case of a not-found error
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
content 
\end_layout

\begin_deeper
\begin_layout Itemize
content-header 
\end_layout

\begin_deeper
\begin_layout Itemize
heading 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
message: The main message to display.
 Defaults to “The page you were looking for could not be found”
\end_layout

\begin_layout Subsubsection*
<doctype> 
\end_layout

\begin_layout Standard
Renders one of five HTML DOCTYPE declarations, according to the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
version
\end_layout

\end_inset

 attribute.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
version: the doctype version, must be one of: 
\end_layout

\begin_deeper
\begin_layout Itemize
HTML 4.01 STRICT 
\end_layout

\begin_layout Itemize
HTML 4.01 TRANSITIONAL 
\end_layout

\begin_layout Itemize
XHTML 1.0 STRICT 
\end_layout

\begin_layout Itemize
XHTML 1.0 TRANSITIONAL 
\end_layout

\begin_layout Itemize
XHTML 1.1 
\end_layout

\end_deeper
\begin_layout Subsubsection*
<html> 
\end_layout

\begin_layout Standard
Renders an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<html>
\end_layout

\end_inset

 tag along with the DOCTYPE specified in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
doctype
\end_layout

\end_inset

 attribute.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
default 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
doctype - the version of the DOCTYPE required.
 See the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
version
\end_layout

\end_inset

 attribute to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<doctype>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<if-ie> 
\end_layout

\begin_layout Standard
Renders a conditional comment in order to have some content ignored by all
 browsers other than Internet Explorer
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
default 
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Example
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<if-ie version="lt IE 7"> ...
 </if-ie>
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<stylesheet>
\end_layout

\begin_layout Standard
Simple wrapper for the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stylesheet_link_tag
\end_layout

\end_inset

 helper.
 The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
name
\end_layout

\end_inset

 attribute can be a comma-separated list of stylesheet names.
\end_layout

\begin_layout Subsubsection*
<JavaScript> 
\end_layout

\begin_layout Standard
Simple wrapper for the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
javascript_include_tag
\end_layout

\end_inset

 helper.
 The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
name
\end_layout

\end_inset

 attribute can be a comma-separated list of script file names.
\end_layout

\begin_layout Subsubsection*
<flash-message> 
\end_layout

\begin_layout Standard
Renders a Rails flash message wrapped in a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<div>
\end_layout

\end_inset

 tag
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
type - which flash message to display.
 Defaults to :notice
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
CSS Classes
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The flash is output in a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<div class="flash notice">
\end_layout

\end_inset

, where 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
notice
\end_layout

\end_inset

 is the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
type
\end_layout

\end_inset

 specified.
\end_layout

\begin_layout Subsubsection*
<flash-messages> 
\end_layout

\begin_layout Standard
Renders 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<flash-message>
\end_layout

\end_inset

 for every flash type given in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
names
\end_layout

\end_inset

 attribute (comma separated), or for all flash messages that have been set
 if 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
names
\end_layout

\end_inset

 is not given.
\end_layout

\begin_layout Subsubsection*
<ajax-progress>
\end_layout

\begin_layout Standard
Renders: 
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<div id="ajax-progress"> 
\end_layout

\begin_layout LyX-Code
  <div> 
\end_layout

\begin_layout LyX-Code
    <span id="ajax-progress-text"> 
\end_layout

\begin_layout LyX-Code
    </span> 
\end_layout

\begin_layout LyX-Code
  </div> 
\end_layout

\begin_layout LyX-Code
</div>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The theme will style this as an AJAX progress ‘spinner’
\end_layout

\begin_layout Subsection
Rapid Plus
\end_layout

\begin_layout Standard
Tags that define higher level interactive ‘widgets’
\end_layout

\begin_layout LyX-Code
<live-search> 
\end_layout

\begin_layout LyX-Code
<filter-menu> 
\end_layout

\begin_layout LyX-Code
<table-plus> 
\end_layout

\begin_layout LyX-Code
<sortable-collection> 
\end_layout

\begin_layout LyX-Code
<preview-with-more> 
\end_layout

\begin_layout LyX-Code
<gravatar> 
\end_layout

\begin_layout Subsubsection*
<live-search> 
\end_layout

\begin_layout Standard
Provides an AJAX-powered 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
find-as-you-type
\end_layout

\end_inset

 live search field which is hooked up to Hobo’s site-side search feature.
 At the moment this tag is not very flexible.
 It is not easy to use if for anything other than Hobo’s site-wide search.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
close-button 
\end_layout

\begin_layout Subsubsection*
<filter-menu> 
\end_layout

\begin_layout Standard
A 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<select>
\end_layout

\end_inset

 menu intended to act as a filter for index pages.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
param-name: the name of the HTTP parameter to use for the filter 
\end_layout

\begin_layout Itemize
options: an array of options for the menu.
 
\end_layout

\begin_layout Itemize
no-filter: The text of the first option which indicates no filter is in
 effect.
 Defaults to ‘All’
\end_layout

\begin_layout Subsubsection*
<table-plus> 
\end_layout

\begin_layout Standard
An enhanced version of Rapid’s 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<table>
\end_layout

\end_inset

 that has support for column sorting, searching and pagination.
 
\end_layout

\begin_layout Standard
This tag calls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<table merge-params>
\end_layout

\end_inset

, so the parameters for 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<table>
\end_layout

\end_inset

 are also available.
 An 
\begin_inset CommandInset href
LatexCommand href
name "worked example"
target "http://cookbook.hobocentral.net/tutorials/agility#improve_the_project_page_with_a_searchable_sortable_table"

\end_inset

 of this tag is available in the 
\begin_inset CommandInset href
LatexCommand href
name "Agility Tutorial"
target "http://cookbook.hobocentral.net/tutorials/agility"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
header 
\end_layout

\begin_deeper
\begin_layout Itemize
search-form 
\end_layout

\begin_deeper
\begin_layout Itemize
search-submit 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
#{scope.field-name}-heading 
\end_layout

\begin_deeper
\begin_layout Itemize
#{scope.field-name}-heading-link 
\end_layout

\begin_layout Itemize
up-arrow 
\end_layout

\begin_layout Itemize
down-arrow 
\end_layout

\end_deeper
\begin_layout Itemize
empty-message 
\end_layout

\begin_layout Itemize
page-nav 
\end_layout

\begin_layout Subsubsection*
<sortable-collection> 
\end_layout

\begin_layout Standard
An enhanced version of Rapid’s 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<collection>
\end_layout

\end_inset

 tag that supports drag-and-drop re-ordering.
 Each item in the collection has a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<div class="ordering-handle" param="handle">
\end_layout

\end_inset

 added, which can be used to drag the item up and down.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
item 
\end_layout

\begin_deeper
\begin_layout Itemize
handle 
\end_layout

\begin_layout Itemize
default 
\end_layout

\begin_deeper
\begin_layout Itemize
card 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
sortable-options: a hash of options to pass to the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
sortable_element
\end_layout

\end_inset

 helper.
 Default are: 
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
{ :constraint => :vertical,
\end_layout

\begin_layout LyX-Code
  :overlap => :vertical, 
\end_layout

\begin_layout LyX-Code
  :scroll => :window, 
\end_layout

\begin_layout LyX-Code
  :handle => 'ordering-handle',
\end_layout

\begin_layout LyX-Code
  :complete => 
\end_layout

\begin_layout LyX-Code
    [visual_effect(:highlight,
\end_layout

\begin_layout LyX-Code
     attributes[:id])] }
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Controller support
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
This tag assumes the controller has a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
reorder
\end_layout

\end_inset

 action.
 This action is added automatically by Hobo’s model-controller if the model
 declares 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
acts_as_list
\end_layout

\end_inset

.
 See also drag and drop reordering in the Controllers and routing section
 of this book.
\end_layout

\begin_layout Subsubsection*
<preview-with-more> 
\end_layout

\begin_layout Standard
Captures the common pattern of a list of “the first few” cards, along with
 a link to the rest.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
default 
\end_layout

\begin_deeper
\begin_layout Itemize
heading 
\end_layout

\begin_layout Itemize
more 
\end_layout

\begin_layout Itemize
collection 
\end_layout

\end_deeper
\begin_layout Subsubsection*
<gravatar> 
\end_layout

\begin_layout Standard
Renders a gravatar (see 
\begin_inset CommandInset href
LatexCommand href
target "gravatar.com"

\end_inset

) image in side a link to this.
 Requires this to have an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
email_address
\end_layout

\end_inset

 field.
 Normally called with a user record in context.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
size: Size in pixels of the image.
 Defaults to 80.
 
\end_layout

\begin_layout Itemize
rating: The rating allowed.
 Defaults to ‘g’.
 See gravatar for information on ratings.
\end_layout

\begin_layout Subsection*
Rapid Summary
\end_layout

\begin_layout Standard
These are a collection of tags that allow a application outline or summary
 to be created.
 
\end_layout

\begin_layout LyX-Code
<rails-version> 
\end_layout

\begin_layout LyX-Code
<with-plugins> 
\end_layout

\begin_layout LyX-Code
<rails-location> 
\end_layout

\begin_layout LyX-Code
<plugin-name> 
\end_layout

\begin_layout LyX-Code
<rails-root> 
\end_layout

\begin_layout LyX-Code
<plugin-location> 
\end_layout

\begin_layout LyX-Code
<rails-env> 
\end_layout

\begin_layout LyX-Code
<plugin-method> 
\end_layout

\begin_layout LyX-Code
<hobo-version> 
\end_layout

\begin_layout LyX-Code
<plugin-clean>
\end_layout

\begin_layout LyX-Code
<plugin-version> 
\end_layout

\begin_layout LyX-Code
<git-branch>
\end_layout

\begin_layout LyX-Code
<git-version>
\end_layout

\begin_layout LyX-Code
<with-environments> 
\end_layout

\begin_layout LyX-Code
<git-clean>  
\end_layout

\begin_layout LyX-Code
<environment-name> 
\end_layout

\begin_layout LyX-Code
<git-last-commit-time>  
\end_layout

\begin_layout LyX-Code
<database-type>
\end_layout

\begin_layout LyX-Code
<database-name> 
\end_layout

\begin_layout LyX-Code
<cms-method>
\end_layout

\begin_layout LyX-Code
<cms-clean> 
\end_layout

\begin_layout LyX-Code
<with-models> 
\end_layout

\begin_layout LyX-Code
<cms-last-commit-time> 
\end_layout

\begin_layout LyX-Code
<model-name> 
\end_layout

\begin_layout LyX-Code
<cms-version>  
\end_layout

\begin_layout LyX-Code
<model-table-name> 
\end_layout

\begin_layout LyX-Code
<cms-branch>
\end_layout

\begin_layout LyX-Code
<with-model-columns> 
\end_layout

\begin_layout LyX-Code
<with-gems> 
\end_layout

\begin_layout LyX-Code
<model-column-type> 
\end_layout

\begin_layout LyX-Code
<gem-name> 
\end_layout

\begin_layout LyX-Code
<model-column-name> 
\end_layout

\begin_layout LyX-Code
<gem-version-requirement>
\end_layout

\begin_layout LyX-Code
<gem-version-required> 
\end_layout

\begin_layout LyX-Code
<with-model-associations> 
\end_layout

\begin_layout LyX-Code
<gem-version> 
\end_layout

\begin_layout LyX-Code
<model-association-name> 
\end_layout

\begin_layout LyX-Code
<gem-frozen> 
\end_layout

\begin_layout LyX-Code
<model-association-macro> 
\end_layout

\begin_layout LyX-Code
<gem-dependencies> 
\end_layout

\begin_layout LyX-Code
<model-association-class-name>
\end_layout

\begin_layout Standard
There are several items that are parents with multiple children.
 They all start with the “<with-“ prefix:
\end_layout

\begin_layout LyX-Code
<with-gems> 
\end_layout

\begin_layout LyX-Code
<with-plugins> 
\end_layout

\begin_layout LyX-Code
<with-environments> 
\end_layout

\begin_layout LyX-Code
<with-models> 
\end_layout

\begin_layout LyX-Code
<with-model-columns> 
\end_layout

\begin_layout LyX-Code
<with-model-associations>
\end_layout

\begin_layout Standard
Note that Hobo creates the file 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
/app/views/front/summary.dryml
\end_layout

\end_inset

 automatically for you:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/summary.dryml.png
	width 90col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The contents of the "summary.dryml" file
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/application_summary_page_sample.png
	width 90col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sample view of the first section of an application summary page
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Below is a complete listing of the default 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
app/views/front/summary.dryml
\end_layout

\end_inset

 file.
 It serves as clear documentation for this tag library.
\end_layout

\begin_layout Standard
\begin_inset Box Framed
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
\noindent
\align left
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/summary.dryml"
lstparams "label={summary.dryml}"

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
<rails-version> 
\end_layout

\begin_layout Standard
Version of Rails.
 Same as 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Rails.version
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<rails-location> 
\end_layout

\begin_layout Standard
Returns “vendor” or “gem”
\end_layout

\begin_layout Subsubsection*
<rails-root> 
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RAILS_ROOT
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
<rails-env> 
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RAILS_ENV
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<hobo-version> 
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Hobo::VERSION
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
<cms-method> 
\end_layout

\begin_layout Standard
Which change management system is in use: “git” “subversion” “other”
\end_layout

\begin_layout Subsubsection*
<cms-clean> 
\end_layout

\begin_layout Standard
calls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
git-clean
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
svn-clean
\end_layout

\end_inset

 as appropriate.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
svn-clean
\end_layout

\end_inset

 not yet written.
\end_layout

\begin_layout Subsubsection*
<cms-last-commit-time> 
\end_layout

\begin_layout Standard
Calls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
git-last-commit-time
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
svn-last-commit-time
\end_layout

\end_inset

 as appropriate.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
svn-last-commit-time
\end_layout

\end_inset

 not yet written.
\end_layout

\begin_layout Subsubsection*
<cms-version> 
\end_layout

\begin_layout Standard
Calls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
git-version
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
svn-version
\end_layout

\end_inset

 as appropriate.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
svn-version
\end_layout

\end_inset

 not yet written.
\end_layout

\begin_layout Subsubsection*
<cms-branch> 
\end_layout

\begin_layout Standard
Calls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
git-branch
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
svn-branch
\end_layout

\end_inset

 as appropriate.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
svn-branch
\end_layout

\end_inset

 not yet written.
\end_layout

\begin_layout Subsubsection*
<git-branch> 
\end_layout

\begin_layout Standard
The git branch currently in use
\end_layout

\begin_layout Subsubsection*
<git-version> 
\end_layout

\begin_layout Standard
The git version currently in use
\end_layout

\begin_layout Subsubsection*
<git-clean> 
\end_layout

\begin_layout Standard
Returns ‘clean’ if there are no modified files, ‘modified’ otherwise.
\end_layout

\begin_layout Subsubsection*
<git-last-commit-time> 
\end_layout

\begin_layout Standard
The time & date of the last commit
\end_layout

\begin_layout Subsubsection*
<with-gems> 
\end_layout

\begin_layout Standard
Repeats on 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Rails.configuration.gems
\end_layout

\end_inset

, including dependent gems
\end_layout

\begin_layout Subsubsection*
<gem-name> 
\end_layout

\begin_layout Standard
Inside 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-gems>
\end_layout

\end_inset

, returns the gem name
\end_layout

\begin_layout Subsubsection*
<gem-version-required>
\end_layout

\begin_layout Standard
Inside 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-gems>
\end_layout

\end_inset

, returns the version required
\end_layout

\begin_layout Subsubsection*
<gem-version>
\end_layout

\begin_layout Standard
Inside 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-gems>
\end_layout

\end_inset

, returns the version installed
\end_layout

\begin_layout Subsubsection*
<gem-frozen>
\end_layout

\begin_layout Standard
Inside 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-gems>
\end_layout

\end_inset

, returns ‘frozen’, ‘installed’ or ‘missing’
\end_layout

\begin_layout Subsubsection*
<gem-dependencies>
\end_layout

\begin_layout Standard
Inside 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-gems>
\end_layout

\end_inset

, returns the gem dependencies
\end_layout

\begin_layout Subsubsection*
<with-plugins>
\end_layout

\begin_layout Standard
Repeats on the plugins used by the application
\end_layout

\begin_layout Subsubsection*
<plugin-name>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-plugins>
\end_layout

\end_inset

, returns the plugin name
\end_layout

\begin_layout Subsubsection*
<plugin-location>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-plugins>
\end_layout

\end_inset

, returns the plugin location (directory)
\end_layout

\begin_layout Subsubsection*
<plugin-method>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-plugins>
\end_layout

\end_inset

, try and determine the method that was used to install the plugin.
 Returns “braid”, “symlink”, “git-submodule” or “other”
\end_layout

\begin_layout Subsubsection*
<plugin-clean>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-plugins>
\end_layout

\end_inset

, determine if the plugin has been modified.
 Returns “clean” or “modified”.
 Returns a blank string if this information is not available.
 
\end_layout

\begin_layout Subsubsection*
<plugin-version>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-plugins>
\end_layout

\end_inset

, determine if the plugin version.
 Returns a blank string if this information is not available.
 
\end_layout

\begin_layout Subsubsection*
<with-environments>
\end_layout

\begin_layout Standard
Repeats on the available execution environments, which are usually ‘development’
, ‘test’ and ‘production’
\end_layout

\begin_layout Subsubsection*
<environment-name>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-environments>
\end_layout

\end_inset

, the environment name in context
\end_layout

\begin_layout Subsubsection*
<database-type>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-environments>
\end_layout

\end_inset

, the database type in context 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<database-name>
\end_layout

\end_inset

 Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-environments>
\end_layout

\end_inset

, the database name in context
\end_layout

\begin_layout Subsubsection*
<with-models>
\end_layout

\begin_layout Standard
Repeats on available models.
 Does not return models defined in libraries or plugins.
\end_layout

\begin_layout Subsubsection*
<model-name>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-models>
\end_layout

\end_inset

, returns the internal model name.
\end_layout

\begin_layout Subsubsection*
<model-table-name>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-models>
\end_layout

\end_inset

, returns the model’s physical table name.
\end_layout

\begin_layout Subsubsection*
<with-model-columns>
\end_layout

\begin_layout Standard
Repeats on the columns within a model.
\end_layout

\begin_layout Subsubsection*
<model-column-type>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-model-columns>
\end_layout

\end_inset

, returns the column type.
\end_layout

\begin_layout Subsubsection*
<model-column-name>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-model-columns>
\end_layout

\end_inset

, returns the column type.
\end_layout

\begin_layout Subsubsection*
<with-model-associations>
\end_layout

\begin_layout Standard
Given a model, repeats on the associations.
\end_layout

\begin_layout Subsubsection*
<model-association-name>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-model-associations>
\end_layout

\end_inset

, returns the association name.
\end_layout

\begin_layout Subsubsection*
<model-association-macro>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-model-associations>
\end_layout

\end_inset

, returns the association type.
\end_layout

\begin_layout Subsubsection*
<model-association-class-name>
\end_layout

\begin_layout Standard
Within 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<with-model-associations>
\end_layout

\end_inset

, returns the association class name.
\end_layout

\begin_layout Subsection*
Rapid Support 
\end_layout

\begin_layout Standard
Rapid Support is the home for some tags that are useful in defining other
 tags.
\end_layout

\begin_layout LyX-Code
<with-fields> 
\end_layout

\begin_layout LyX-Code
<with-field-names>
\end_layout

\begin_layout Subsubsection*
<with-fields>
\end_layout

\begin_layout Standard
Call with the context set to a record.
 Repeats the content of the tag with 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this_field
\end_layout

\end_inset

 set to the value and name of each of the record’s fields in turn.
 E.g.
 this is useful for generating a form containing each of the fields.
 Tags like 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<field-list>
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<table>
\end_layout

\end_inset

 forward their attributes to this tag and also have the features described
 here.
 For example, the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
fields
\end_layout

\end_inset

 attribute to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<field-list>
\end_layout

\end_inset

 supports the same options as described here.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
default:
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
fields: set to one of: 
\end_layout

\begin_deeper
\begin_layout Itemize
A model class: equivalent to listing all of the regular ‘content columns’
 of that model
\end_layout

\begin_layout Itemize
*: equivalent to listing all of the regular ‘content columns’ of the current
 record
\end_layout

\begin_layout Itemize
A comma separated list of field names.
 Defaults to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
*
\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
associations: set to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has_many
\end_layout

\end_inset

 to select the associations 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has_many
\end_layout

\end_inset

 relationships used as the “fields”.
 Do not also give the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
fields
\end_layout

\end_inset

 attribute.
 
\end_layout

\begin_layout Itemize
skip: comma separated list of field names to omit.
 
\end_layout

\begin_layout Itemize
skip-associations: set to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has-many
\end_layout

\end_inset

 to omit all 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has_many
\end_layout

\end_inset

 associations.
\end_layout

\begin_layout Itemize
include-timestamps: whether or not to include the standard 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ActiveRecord
\end_layout

\end_inset

 timestamp fields such as 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
created_at
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
updated_at
\end_layout

\end_inset

.
 Defaults to false.
\end_layout

\begin_layout Itemize
force-all: by default fields are skipped if the current user does not have
 view permission.
 Set 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
force-all
\end_layout

\end_inset

 to true to skip this permission check and include all the fields.
\end_layout

\begin_layout Subsubsection*
<with-field-names>
\end_layout

\begin_layout Standard
Call with the context set to a model class.
 Repeats the content of the tag with 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
this
\end_layout

\end_inset

 set name of each of the model’s fields in turn.
 For example, this tag is used when generating the heading row in: 
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code
<table fields='...'/>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Attributes 
\end_layout

\begin_layout Itemize
fields: set to one of:
\end_layout

\begin_deeper
\begin_layout Itemize
A model class: equivalent to listing all of the regular ‘content columns’
 of that model 
\end_layout

\begin_layout Itemize
’*’: equivalent to listing all of the regular ‘content columns’ of the current
 record 
\end_layout

\begin_layout Itemize
A comma separated list of field names.
 Defaults to ’*’ 
\end_layout

\end_deeper
\begin_layout Itemize
skip: comma separated list of field names to omit.
 
\end_layout

\begin_layout Itemize
skip-associations: set to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has-many
\end_layout

\end_inset

 to omit all 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
has_many
\end_layout

\end_inset

 associations.
\end_layout

\begin_layout Itemize
include-timestamps: whether or not to include the standard 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ActiveRecord
\end_layout

\end_inset

 timestamp fields such as 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
created_at
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
updated_at
\end_layout

\end_inset

.
 Defaults to false.
\end_layout

\begin_layout Subsection*
Rapid User Pages 
\end_layout

\begin_layout Standard
Rapid User Pages contains tags that implement the basics of Hobo’s user
 management: log in, sign up, forgot password etc.
\end_layout

\begin_layout LyX-Code
<simple-page>
\end_layout

\begin_layout LyX-Code
<login-page>
\end_layout

\begin_layout LyX-Code
<forgot-password-page>
\end_layout

\begin_layout LyX-Code
<forgot-password-email-sent-page>
\end_layout

\begin_layout LyX-Code
<account-disabled-page>
\end_layout

\begin_layout LyX-Code
<account-page>
\end_layout

\begin_layout Subsubsection*
<simple-page> 
\end_layout

\begin_layout Standard
Some of the user pages use a simplified layout that does not feature things
 like the main nav and live-search.
 This tag defines that page
\end_layout

\begin_layout Subsubsection*
<login-page>
\end_layout

\begin_layout Standard
Simple log-in page
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
body 
\end_layout

\begin_layout Itemize
content 
\end_layout

\begin_deeper
\begin_layout Itemize
content-header heading 
\end_layout

\begin_layout Itemize
content-body 
\end_layout

\begin_deeper
\begin_layout Itemize
form 
\end_layout

\begin_deeper
\begin_layout Itemize
labeled-item-list 
\end_layout

\begin_deeper
\begin_layout LyX-Code
- login-label 
\end_layout

\begin_layout LyX-Code
- login-input 
\end_layout

\begin_layout LyX-Code
- password-label 
\end_layout

\begin_layout LyX-Code
- password-input 
\end_layout

\begin_layout LyX-Code
- remember-me 
\end_layout

\begin_deeper
\begin_layout LyX-Code
* remember-me-label 
\end_layout

\begin_layout LyX-Code
* remember-me-input 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
actions 
\end_layout

\begin_deeper
\begin_layout LyX-Code
- submit 
\end_layout

\end_deeper
\begin_layout Itemize
forgot-password 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Subsubsection*
<forgot-password-page>
\end_layout

\begin_layout Standard
The page that initiates the forgotten password process.
 Contains a single text-input where the user can provide their email address
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
body 
\end_layout

\begin_layout Itemize
content 
\end_layout

\begin_deeper
\begin_layout Itemize
content-header 
\end_layout

\begin_deeper
\begin_layout Itemize
heading 
\end_layout

\end_deeper
\begin_layout Itemize
content-body 
\end_layout

\begin_deeper
\begin_layout Itemize
form 
\end_layout

\begin_deeper
\begin_layout Itemize
list-item-list 
\end_layout

\begin_deeper
\begin_layout LyX-Code
- email-address-label 
\end_layout

\begin_layout LyX-Code
- email-address-input 
\end_layout

\end_deeper
\begin_layout Itemize
actions 
\end_layout

\begin_deeper
\begin_layout LyX-Code
- submit 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\end_deeper
\begin_layout Subsubsection*
<forgot-password-email-sent-page>
\end_layout

\begin_layout Standard
Second page in the forgotten password process.
 Informs the user that the email has been sent “If the e-mail address you
 entered is in our records”.
 This is to avoid a privacy concern that the forgotten-password mechanism
 can be otherwise used to tell if a given email is associated with an account
 or not.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
body 
\end_layout

\begin_layout Itemize
content 
\end_layout

\begin_deeper
\begin_layout Itemize
content-header 
\end_layout

\begin_deeper
\begin_layout Itemize
h2 
\end_layout

\end_deeper
\begin_layout Itemize
content-body 
\end_layout

\begin_deeper
\begin_layout Itemize
message 
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsubsection*
<account-disabled-page> 
\end_layout

\begin_layout Standard
The page that is displayed on attempting to log in to an account that has
 been disabled.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
body 
\end_layout

\begin_layout Itemize
content 
\end_layout

\begin_deeper
\begin_layout Itemize
content-header 
\end_layout

\begin_deeper
\begin_layout Itemize
h2 
\end_layout

\end_deeper
\begin_layout Itemize
content-body 
\end_layout

\end_deeper
\begin_layout Subsubsection*
<account-page>
\end_layout

\begin_layout Standard
Basic account page that provides the ability for the user to change their
 email address and password.
\end_layout

\begin_layout Standard
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Parameters
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
body 
\end_layout

\begin_layout Itemize
content 
\end_layout

\begin_deeper
\begin_layout Itemize
content-header 
\end_layout

\begin_deeper
\begin_layout Itemize
heading 
\end_layout

\end_deeper
\begin_layout Itemize
content-body 
\end_layout

\begin_deeper
\begin_layout Itemize
error-messages 
\end_layout

\begin_layout Itemize
form 
\end_layout

\begin_deeper
\begin_layout Itemize
field-list 
\end_layout

\begin_layout Itemize
actions 
\end_layout

\begin_deeper
\begin_layout LyX-Code
- submit 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\end_deeper
\end_body
\end_document
