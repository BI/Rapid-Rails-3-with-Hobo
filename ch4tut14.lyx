#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass hobo
\use_default_options true
\begin_modules
logicalmkup
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\use_refstyle 0
\boxbgcolor #e0e0e8
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth -1
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
Tutorial 14 – Working with the Show Page Tag
\end_layout

\begin_layout Standard
In this tutorial you will learn the options for displaying details about
 single records.
 In the last two tutorials, we focused on displaying lists of records.
 Hobo has a specific auto-generated tag for handling the display of individual
 records and a route and view template associated with it.
 
\end_layout

\begin_layout Standard
Tutorial Application: four_table
\end_layout

\begin_layout Standard
Topics
\end_layout

\begin_layout Standard
Edit the <show-page> tag.
\end_layout

\begin_layout Standard
Create and work with the show.dryml template.
\end_layout

\begin_layout Standard
Work with <field-list>, <fieldname-label> and <view> tags.
 
\end_layout

\begin_layout Standard
Steps
\end_layout

\begin_layout Standard
1.	Copy the <show-page> tag.
 Go to pages.dryml and copy the <show-page> tag for Recipes to application.dryml.
 
\end_layout

\begin_layout Standard
<def tag="show-page" for="Recipe">
\end_layout

\begin_layout Standard
  <page merge title="#{ht 'recipe.show.title', :default=>['Recipe'] }">
\end_layout

\begin_layout Standard
    <body: class="show-page recipe" param/>
\end_layout

\begin_layout Standard
    <content: param>
\end_layout

\begin_layout Standard
          <header param="content-header">
\end_layout

\begin_layout Standard
            <a:country param="parent-link">&laquo; <ht key="recipe.actions.back_to
_parent" parent="Country" name="&this">Back to <name/></ht></a:country>
\end_layout

\begin_layout Standard
            <h2 param="heading">
\end_layout

\begin_layout Standard
              <ht key="recipe.show.heading" name="&this.respond_to?(:name)
 ? this.name : ''">
\end_layout

\begin_layout Standard
                <name/>
\end_layout

\begin_layout Standard
              </ht>
\end_layout

\begin_layout Standard
            </h2>
\end_layout

\begin_layout Standard
            <record-flags fields="" param/>
\end_layout

\begin_layout Standard
            <a action="edit" if="&can_edit?" param="edit-link">
\end_layout

\begin_layout Standard
              <ht key="recipe.actions.edit" name="&this.respond_to?(:name)
 ? this.name : ''">
\end_layout

\begin_layout Standard
                Edit Recipe
\end_layout

\begin_layout Standard
              </ht>
\end_layout

\begin_layout Standard
            </a>
\end_layout

\begin_layout Standard
          </header>
\end_layout

\begin_layout Standard
          <section param="content-body">
\end_layout

\begin_layout Standard
            <view:body param="description"/>
\end_layout

\begin_layout Standard
            <field-list fields="country" param/>
\end_layout

\begin_layout Standard
            <section param="collection-section">
\end_layout

\begin_layout Standard
              <h3 param="collection-heading">
\end_layout

\begin_layout Standard
                <ht key="category.collection.heading" count="&this.categories.count"
 >
\end_layout

\begin_layout Standard
                  <human-collection-name collection="categories" your/>
\end_layout

\begin_layout Standard
                </ht>
\end_layout

\begin_layout Standard
              </h3>
\end_layout

\begin_layout Standard
              <collection:categories param/>
\end_layout

\begin_layout Standard
            </section>
\end_layout

\begin_layout Standard
          </section>
\end_layout

\begin_layout Standard
    </content:>
\end_layout

\begin_layout Standard
  </page>
\end_layout

\begin_layout Standard
</def>
\end_layout

\begin_layout Standard
We are going to focus in on three display components of this tag, noted
 in bold italics above, to help you understand how to change the display
 of individual records.
  (Add the ‘<field-list fields="country" param/>’ if it is not present.)
\end_layout

\begin_layout Standard
Click on the Recipes tab and then click on an individual recipe.
\end_layout

\begin_layout Standard
Now comment out the three lines above in bold italics using <!-- ...
 -->, and confirm that you have removed the display of the individual recipe
 record.
\end_layout

\begin_layout Standard
2.	Create the show.dryml template.
 Go to views/recipes and create a new template file called show.dryml.
 When a user invokes the show action by requesting the display of a single
 record, this is the first of the three places Hobo looks to determine how
 to display the record.
 
\end_layout

\begin_layout Standard
As with the index action, its next two stops are the application.dryml file
 to look for application wide tag definitions and finally in pages.dryml
 for the auto-generated tag definitions which are based on model and controller
 code.
\end_layout

\begin_layout Standard
Place the following code in show.dryml to invoke your show page.
 
\end_layout

\begin_layout Standard
<show-page/>
\end_layout

\begin_layout Standard
Refresh your browser and you should see the following:
\end_layout

\begin_layout Standard
3.	Use the <field-list> tag.
 The <field-list> tag allows you to display rows of data in two columns.
 The first column contains the name of the field and the second column contains
 the contents of that field.
 The <field-list> tag has been parameterized in the <show-page> tag so we
 need to invoke it with a trailing colon (:).
 
\end_layout

\begin_layout Standard
Remove the comments around the <field-list> tag in application.dryml and
 try the following in show.dryml.
\end_layout

\begin_layout Standard
<show-page>
\end_layout

\begin_layout Standard
	<field-list: fields = "body, country"/>
\end_layout

\begin_layout Standard
</show-page>
\end_layout

\begin_layout Standard
Here you are using the attribute  fields to declare which fields in your
 model you wish to display.
\end_layout

\begin_layout Standard
Hobo can even reach into the associated table and display the categories
 using <field-list>.
 Try this.
\end_layout

\begin_layout Standard
<show-page>
\end_layout

\begin_layout Standard
	<field-list: fields = "body, country, categories"/>
\end_layout

\begin_layout Standard
</show-page>
\end_layout

\begin_layout Standard
You can remove the collection heading since you no longer need it by observing
 that the <show-page> tag has a parameterized <h3> tag renamed as the <collectio
n-heading:> parameter tag.
 You will see the following code in the <show-page> definition.
\end_layout

\begin_layout Standard
<h3 param="collection-heading">Categories</h3>
\end_layout

\begin_layout Standard
Now go into your show.dryml file and replace the default contents of the
 tag with nothing.
 
\end_layout

\begin_layout Standard
<show-page>
\end_layout

\begin_layout Standard
	<field-list: fields = "body, country, categories"/>
\end_layout

\begin_layout Standard
	<collection-heading:></collection-heading:>
\end_layout

\begin_layout Standard
</show-page>
\end_layout

\begin_layout Standard
Now you should have the following after refreshing your browser.
\end_layout

\begin_layout Standard
4.
 Changing the <field-list> labels.
 We can now see that the <field-list> tag does a nice job of formatting
 the display of the fields of a record.
 The default display pictured in Step 1 uses a combination of the <view>
 and <field-list> tags.
 However the <view> tag does not automatically provide a label like the
 <field-list> tag.
 We will cover this further in Step 5.
 Now let’s learn how to change the labels.
\end_layout

\begin_layout Standard
Try the following code to change the body label to ‘Recipe’.
\end_layout

\begin_layout Standard
<show-page>
\end_layout

\begin_layout Standard
 <collection-heading:></collection-heading:>
\end_layout

\begin_layout Standard
   <field-list: fields = "body, country, categories"> 
\end_layout

\begin_layout Standard
    <body-label:>Recipe</body-label:>  
\end_layout

\begin_layout Standard
   </field-list>
\end_layout

\begin_layout Standard
<show-page>
\end_layout

\begin_layout Standard
There are a few new things going on here that you have not seen before.
\end_layout

\begin_layout Standard
The <body-label:> tag is a parameter tag defined in the Rapid Library.
 
\end_layout

\begin_layout Standard
The <body-label:> tag is a user customized Rapid library tag derived from
 the generic <fieldname-label> tag.
\end_layout

\begin_layout Standard
The <body-label:> tag is nested within the <field-list> tag.
\end_layout

\begin_layout Standard
Let’s go through these points one at a time.
\end_layout

\begin_layout Standard
Rapid Parameter Tag.
 This the tag is used with a trailing colon (:), meaning that <body-label:>
 is a parameter tag.
 However, it is not defined anywhere within either your code or the auto-generat
ed code.
 (You will see user-customized tags again with pseudo tags in the next tutorial.)
\end_layout

\begin_layout Standard
If you have done any coding besides this tutorial, you have probably run
 into the error “You cannot mix parameter and non-parameter tags”.
\end_layout

\begin_layout Standard
If there were not a Rapid parameter tag to use here and you tried to use
 a regular Rapid tag, you would get an error.
 Try deleting the colon (:) from <body-label:> to confirm this.
\end_layout

\begin_layout Standard
User-customized tags.
 The tag name is dynamic depending on what field in the <field-list> is
 being addressed.
 For example, to change the label of the country field, you would use the
 <country-label> tag.
\end_layout

\begin_layout Standard
Tag nesting.
 The feature that you see here is the ability to nest tags in order to pass
 data.
 Here you are passing the content of the tag to the label variable of the
 <field-list> tag.
\end_layout

\begin_layout Standard
Let’s go one step further and re-label the other two fields displayed on
 our page.
 You can just nest each <fieldname-label> tag after the other within <field-list
> and Hobo will pass the content into the <field-list> tag.
\end_layout

\begin_layout Standard
You might be noticing that categories is not a field at all; it is a collection.
 That is not a problem for Hobo.
 Hobo can address the label using the <categories-label> just as if it was
 a field: 
\end_layout

\begin_layout Standard
<show-page>
\end_layout

\begin_layout Standard
   <collection-heading:></collection-heading:>
\end_layout

\begin_layout Standard
	<field-list: fields = "body, country, categories">
\end_layout

\begin_layout Standard
		<body-label:>Recipe</body-label:>
\end_layout

\begin_layout Standard
		<country-label:>Origin</country-label:>
\end_layout

\begin_layout Standard
		<categories-label:>Flavors</categories-label:>
\end_layout

\begin_layout Standard
	</field-list>
\end_layout

\begin_layout Standard
<show-page>
\end_layout

\begin_layout Standard
Refresh your browser and try this out.
\end_layout

\begin_layout Standard
5.
 Using the <view> tag to display a record.
 There is still another way to work with the fields of an individual record
 and its associated records using the <view> tag.
\end_layout

\begin_layout Standard
Let’s make a tag from the <show-page> tag within application.dryml.
 Recall that you can use the merge attribute within a template although
 you can’t use the <extend> tag in a template, only in application.dryml.
\end_layout

\begin_layout Standard
Let’s try out the following code in application.dryml.
 
\end_layout

\begin_layout Standard
<def tag="show-page-new">
\end_layout

\begin_layout Standard
	<show-page merge>
\end_layout

\begin_layout Standard
		<content-body:>
\end_layout

\begin_layout Standard
			<h2>Title:</h2>
\end_layout

\begin_layout Standard
			<view:title/><br/>
\end_layout

\begin_layout Standard
			<h2>Recipe:</h2>
\end_layout

\begin_layout Standard
			<view:body/>
\end_layout

\begin_layout Standard
			<h2>Categories:</h2>
\end_layout

\begin_layout Standard
			<view:categories/>
\end_layout

\begin_layout Standard
			<h2>Country:</h2>
\end_layout

\begin_layout Standard
			<view:country/>
\end_layout

\begin_layout Standard
		</content-body:>
\end_layout

\begin_layout Standard
	</show-page>
\end_layout

\begin_layout Standard
</def>
\end_layout

\begin_layout Standard
<show-page-new/>
\end_layout

\begin_layout Standard
In the above code, we are using the parameter tag <content-body:> defined
 from a parameterized <section> tag in the <show-page> tag:
\end_layout

\begin_layout Standard
<section param="content-body">
\end_layout

\begin_layout Standard
By placing new HTML and Rapid library tags within the <content-body:> tags,
 we are changing the default content defined in the <show-page> tag to the
 new content and preserving everything else in the <show-page> tag.
 We are not only preserving the content but also the formatting.
 Hobo has predefined CSS formatting as you probably have gathered that correspon
d to the Rapid tags.
 
\end_layout

\begin_layout Standard
If, for example, we had used the replace attribute in the <content-body:>
 tag like this…
\end_layout

\begin_layout Standard
<content-body: replace>
\end_layout

\begin_layout Standard
..we would have removed Hobo’s built-in formatting.
 
\end_layout

\begin_layout Standard
Remove the last code in show.dryml  and put <show-page-new/> at the top.
\end_layout

\begin_layout Standard
Refresh your browser without using the replace attribute and then try it
 with the attribute to see confirm that the formatting will be removed.
\end_layout

\begin_layout Standard
Here is what happens when you add the replace attribute.
 
\end_layout

\begin_layout Standard
Now take out the replace attribute before proceeding.
\end_layout

\begin_layout Standard
6.	Summary.
 You have now learned to create a new template called show.dryml in the views/rec
ipes directory that is used whenever there is an action to display an individual
 recipe record.
 Before you created this file, Hobo was constructing the template on the
 fly from the auto-generated <show-page> tag in pages.dryml.
\end_layout

\end_body
\end_document
